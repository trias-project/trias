[{"path":"https://trias-project.github.io/trias/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to trias","title":"Contributing to trias","text":"First , thanks considering contributing trias! üëç ‚Äôs people like make rewarding us - project maintainers - work trias. üòä trias open source project, maintained people care. directly funded .","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to trias","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to trias","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"share-the-love-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Share the love ‚ù§Ô∏è","title":"Contributing to trias","text":"Think trias useful? Let others discover , telling person, via Twitter blog post. Using trias paper writing? Consider citing .","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"ask-a-question-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to trias","text":"Using trias got stuck? Browse documentation see can find solution. Still stuck? Post question issue GitHub. offer user support, ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer email.","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How you can contribute","what":"Propose an idea üí°","title":"Contributing to trias","text":"idea new trias feature? Take look documentation issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How you can contribute","what":"Report a bug üêõ","title":"Contributing to trias","text":"Using trias discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation üìñ","title":"Contributing to trias","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"the-website","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"The website","title":"Contributing to trias","text":"website generated pkgdown. means don‚Äôt write html: content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation. , report issue can point right direction.","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"Function documentation","title":"Contributing to trias","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to trias","text":"Care fix bugs implement new functionality trias? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://trias-project.github.io/trias/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to trias","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). R CMD check using devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"https://trias-project.github.io/trias/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Damiano Oldoni. Author, maintainer. Soria Delva. Author. Tim Adriaens. Contributor. Peter Desmet. Contributor. Sander Devisscher. Author. Stijn Van Hoey. Contributor. Pieter Huybrechts. Contributor. Machteld Varewyck. Author. Research Institute Nature Forest (INBO). Copyright holder, funder.           https://www.vlaanderen./inbo/en-gb/ . Funder.           https://trias-project.. Funder.           https://www.riparias.European Union's Horizon Europe Research Innovation Programme (ID 101059592). Funder.           https://b-cubed.eu/","code":""},{"path":"https://trias-project.github.io/trias/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oldoni D, Delva S, Devisscher S, Varewyck M (2024). trias: Process Data Project Tracking Invasive Alien Species (TrIAS). R package version 3.0.1, https://trias-project.github.io/trias, https://github.com/trias-project/trias.","code":"@Manual{,   title = {trias: Process Data for the Project Tracking Invasive Alien Species (TrIAS)},   author = {Damiano Oldoni and Soria Delva and Sander Devisscher and Machteld Varewyck},   year = {2024},   note = {R package version 3.0.1,     https://trias-project.github.io/trias},   url = {https://github.com/trias-project/trias}, }"},{"path":"https://trias-project.github.io/trias/index.html","id":"trias-","dir":"","previous_headings":"","what":"Process Data for the Project Tracking Invasive Alien Species (TrIAS)","title":"Process Data for the Project Tracking Invasive Alien Species (TrIAS)","text":"Trias R package providing functionality Tracking Invasive Alien Species (TrIAS) LIFE RIPARIAS projects. get started, see: Function reference: overview functions.","code":""},{"path":"https://trias-project.github.io/trias/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Process Data for the Project Tracking Invasive Alien Species (TrIAS)","text":"can install development version trias GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"trias-project/trias\")"},{"path":"https://trias-project.github.io/trias/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Process Data for the Project Tracking Invasive Alien Species (TrIAS)","text":"welcome contributions including bug reports. License: MIT Get citation information trias R citation(\"trias\"). Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://trias-project.github.io/trias/reference/GBIF_distr_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Accepted GBIF distribution terms ‚Äî GBIF_distr_terms","title":"Accepted GBIF distribution terms ‚Äî GBIF_distr_terms","text":"Accepted GBIF distribution terms","code":""},{"path":"https://trias-project.github.io/trias/reference/GBIF_distr_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accepted GBIF distribution terms ‚Äî GBIF_distr_terms","text":"","code":"GBIF_distr_terms"},{"path":"https://trias-project.github.io/trias/reference/GBIF_distr_terms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Accepted GBIF distribution terms ‚Äî GBIF_distr_terms","text":"object class character length 3.","code":""},{"path":"https://trias-project.github.io/trias/reference/apply_decision_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply decision rules to time series and assess emerging status ‚Äî apply_decision_rules","title":"Apply decision rules to time series and assess emerging status ‚Äî apply_decision_rules","text":"function defines applies decision rules assess emerging status specific time.","code":""},{"path":"https://trias-project.github.io/trias/reference/apply_decision_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply decision rules to time series and assess emerging status ‚Äî apply_decision_rules","text":"","code":"apply_decision_rules(   df,   y_var = \"ncells\",   eval_year,   year = \"year\",   taxonKey = \"taxonKey\" )"},{"path":"https://trias-project.github.io/trias/reference/apply_decision_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply decision rules to time series and assess emerging status ‚Äî apply_decision_rules","text":"df df. dataframe containing temporal data one taxa. column taxa can class character, numeric integers. y_var character. Name column df containing variable model. passed string, e.g. \"occurrences\". eval_year numeric. Temporal value emerging status evaluated. eval_year present timeseries least one taxon. year character. Name column df containing temporal values. passed string, e.g. \"time\". Default: \"year\". taxonKey character. Name column df containing taxon IDs. passed string, e.g. \"taxon\". Default: \"taxonKey\".","code":""},{"path":"https://trias-project.github.io/trias/reference/apply_decision_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply decision rules to time series and assess emerging status ‚Äî apply_decision_rules","text":"df. dataframe (tibble) containing emerging status. Columns: year: column containing temporal values. Column name equal value argument year. Column equal value argument eval_year. , apply decision rules years 2018 (eval_year = 2018), get 2018 column. em_status: numeric. Emerging status, integer 0 3, based output decision rules (next columns). See details information. dr_1: logical. Output decision rule 1 answers question: time series contain one positive value evaluation year? dr_2: logical. Output decision rule 2 answers question: value evaluation year median value? dr_3: logical. Output decision rule 3 answers question: time series contains zeros five years eval_year? dr_4: logical. Output decision rule 4 answers question: value column y_var maximum ever observed eval_year?","code":""},{"path":"https://trias-project.github.io/trias/reference/apply_decision_rules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply decision rules to time series and assess emerging status ‚Äî apply_decision_rules","text":"Based decision rules output define emergency status value, em: dr_3 TRUE: em = 0 (emerging) dr_1 dr_3 FALSE, dr_2 dr_4 TRUE: em = 3 (emerging) dr_2 TRUE, others FALSE: em = 2 (potentially emerging (dr_1 TRUE  dr_3 FALSE) (dr_1, dr_2 dr_3 FALSE): em = 1 (unclear)","code":""},{"path":"https://trias-project.github.io/trias/reference/apply_decision_rules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply decision rules to time series and assess emerging status ‚Äî apply_decision_rules","text":"","code":"df <- dplyr::tibble(   taxonID = c(rep(1008955, 10), rep(2493598, 3)),   y = c(seq(2009, 2018), seq(2016, 2018)),   obs = c(1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 3, 0) ) apply_decision_rules(df,   eval_year = 2016,   y_var = \"obs\",   taxonKey = \"taxonID\",   year = \"y\" ) #> # A tibble: 2 √ó 7 #>   taxonID     y em_status dr_1  dr_2  dr_3  dr_4  #>     <dbl> <dbl>     <dbl> <lgl> <lgl> <lgl> <lgl> #> 1 1008955  2016         1 FALSE FALSE FALSE FALSE #> 2 2493598  2016         1 TRUE  FALSE FALSE TRUE"},{"path":"https://trias-project.github.io/trias/reference/apply_gam.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply GAM to time series and assess emerging status ‚Äî apply_gam","title":"Apply GAM to time series and assess emerging status ‚Äî apply_gam","text":"function applies generalized additive models (GAM) assess emerging status certain time window.","code":""},{"path":"https://trias-project.github.io/trias/reference/apply_gam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply GAM to time series and assess emerging status ‚Äî apply_gam","text":"","code":"apply_gam(   df,   y_var,   eval_years,   year = \"year\",   taxonKey = \"taxonKey\",   type_indicator = \"observations\",   baseline_var = NULL,   p_max = 0.1,   taxon_key = NULL,   name = NULL,   df_title = NULL,   x_label = \"year\",   y_label = \"Observations\",   saveplot = FALSE,   dir_name = NULL,   width = NULL,   height = NULL,   verbose = FALSE )"},{"path":"https://trias-project.github.io/trias/reference/apply_gam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply GAM to time series and assess emerging status ‚Äî apply_gam","text":"df df. dataframe containing temporal data. y_var character. Name column containing variable model. passed string, e.g. \"occurrences\". eval_years numeric. Temporal value(s) emerging status evaluated. year character. Name column containing temporal values. passed string, e.g. \"time\". Default: \"year\". taxonKey character. Name column containing taxon IDs. passed string, e.g. \"taxon\". Default: \"taxonKey\". type_indicator character. One \"observations\", \"occupancy\". Used title output plot. Default: \"observations\". baseline_var character. Name column containing values use additional covariate. covariate introduced model correct research effort bias. Default: NULL. NULL internal variable method_em = \"basic\", otherwise method_em = \"correct_baseline\". Value method_em part title output plot. p_max numeric. value 0 1. Default: 0.1. taxon_key numeric, character. Taxon key timeseries belongs . Used exclusively graph title filename (saveplot = TRUE). Default: NULL. name character. Species name timeseries belongs . Used exclusively graph title filename (saveplot = TRUE). Default: NULL. df_title character. string like add graph titles filenames (saveplot = TRUE). title always composed : \"GAM\" + type_indicator + method_em + taxon_key + name + df_title separated underscore (\"_\"). Default: NULL. x_label character. x-axis label output plot. Default: \"year\". y_label character. y-axis label output plot. Default: \"number observations\". saveplot logical. TRUE plots automatically saved. Default: FALSE. dir_name character. Path directory saving plots. path exists, directory created. Example: \"./output/graphs/\". NULL saveplot TRUE, plots saved current directory. Default: NULL. width numeric. Plot width pixels. Values passed ggsave. Ignored saveplot = FALSE. NULL saveplot TRUE, width set 1680 message returned. Default: NULL. height numeric. Plot height pixels. Values passed ggsave. Ignored saveplot = FALSE. NULL saveplot TRUE, height 1200 message returned. Default: NULL. verbose logical. TRUE status processing possible issues returned. Default: FALSE.","code":""},{"path":"https://trias-project.github.io/trias/reference/apply_gam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply GAM to time series and assess emerging status ‚Äî apply_gam","text":"list six slots: em_summary: df. data.frame summarizing emerging status outputs. em_summary contains many rows length input variable eval_year. , evaluate GAM three years, em_summary contain three rows. contains following columns: \"taxonKey\": column containing taxon ID. Column name equal value argument taxonKey. \"year\": column containing temporal values. Column name equal value argument year. Column equal value argument eval_years. , evaluate GAM years 2017, 2018 (eval_years = c(2017, 2018)), get two values column. em_status: numeric. Emerging statuses, integer 0 3. growth: numeric. Lower limit GAM confidence interval first derivative, positive. represents lower guaranteed growth. method: character. GAM method, One : \"correct_baseline\" \"basic\". See details description argument use_baseline. model: gam object. model returned gam() function. NULL GAM applied. output: df. Complete data.frame containing details summary em_summary. contains following columns: columns df. method: character. GAM method, One : \"correct_baseline\" \"basic\". See details description argument use_baseline. fit: numeric. Fit values. ucl: numeric. upper confidence level values. lcl: numeric. lower confidence level values. em1: numeric. emergency value 1st derivative. -1, 0 +1. em2: numeric. emergency value 2nd derivative: -1, 0 +1. em: numeric. emergency value: -4 +4, based em1 em2. See Details. em_status: numeric. Emerging statuses, integer 0 3. See Details. growth: numeric. Lower limit GAM confidence interval first derivative, positive. represents lower guaranteed growth. first_derivative: df. Data.frame details first derivatives. contains following columns: smooth: smooth identifier. Example: s(year). derivative: numeric. Value first derivative. se: numeric. Standard error derivative. crit: numeric. Critical value required derivative + (se * crit) derivative - (se * crit) form upper lower bounds confidence interval first derivative estimated smooth specific confidence level. case confidence level hard-coded: 0.8. crit <- qnorm(p = (1-0.8)/2, mean = 0, sd = 1, lower.tail = FALSE). lower_ci: numeric. Lower bound confidence interval estimated smooth. upper_ci: numeric. Upper bound confidence interval estimated smooth. value argument year: column temporal values. value argument baseline_var: column fitted values baseline. baseline_var NULL, column present. second_derivative: df. Data.frame details second derivatives. columns first_derivatives. plot: ggplot2 object. Plot observations GAM output emerging status. emerging status assessed observations plotted.","code":""},{"path":"https://trias-project.github.io/trias/reference/apply_gam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply GAM to time series and assess emerging status ‚Äî apply_gam","text":"GAM modelling performed using mgcvb::gam(). use function, pass: formula family object specifying distribution smoothing parameter estimation method information arguments, see [mgcv::gam()]. covariate used (baseline_var = NULL), GAM formula : n ~ s(year, k = maxk, m = 3, bs = \"tp\"). Otherwise GAM formula second term, s(n_covariate) GAM formula n ~ s(year, k = maxk, m = 3, bs = \"tp\") + s(n_covariate). Description parameters present formula : k: dimension basis used represent smooth term, .e. number knots used calculating smoother. #' set k maxk, number decades time series. less 5 decades present data, maxk #' set 5. bs indicates basis use smoothing: uses default penalized thin plate regression splines. m specifies order derivatives thin plate spline penalty. use m = 3, default value. use [mgcv::nb()], negative binomial family perform GAM. smoothing parameter estimation method set REML (Restricted maximum likelihood approach). P-value GAM smoother(s) /threshold value p_max, GAM performed next warning returned: \"GAM output used: p-values GAM smoothers {p_max}\" p_max P-value used threshold defined argument p_max. mgcv::gam() returns error warning, following message returned user: \"GAM ({method_em}) performed converge.\", method_em one \"basic\" \"correct_baseline\". See argument baseline_var. first second derivatives smoother calculated using function gratia::derivatives() following hard coded arguments: type: type finite difference used. Set  \"central\". order: 1 first derivative, 2 second derivative level: confidence level. Set 0.8 eps: finite difference. Set 1e-4. details, please check derivatives. sign lower upper confidence levels first second derivatives used define detailed emergency status (em) internally used return emergency status, em_status, column returned data.frame em_summary.","code":""},{"path":"https://trias-project.github.io/trias/reference/apply_gam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply GAM to time series and assess emerging status ‚Äî apply_gam","text":"","code":"library(dplyr) #>  #> Attaching package: ‚Äòdplyr‚Äô #> The following objects are masked from ‚Äòpackage:stats‚Äô: #>  #>     filter, lag #> The following objects are masked from ‚Äòpackage:base‚Äô: #>  #>     intersect, setdiff, setequal, union df_gam <- tibble(   taxonKey = rep(3003709, 24),   canonicalName = rep(\"Rosa glauca\", 24),   year = seq(1995, 2018),   n = c(     1, 1, 0, 0, 0, 2, 0, 0, 1, 3, 1, 2, 0, 5, 0, 5, 4, 2, 1,     1, 3, 3, 8, 10   ),   n_class = c(     229, 555, 1116, 939, 919, 853, 442, 532, 623, 1178, 732, 371, 1053,     1001, 1550, 1142, 1076, 1310, 922, 1773, 1637,     1866, 2234, 2013   ) ) # apply GAM to n without baseline as covariate apply_gam(df_gam,   y_var = \"n\",   eval_years = 2018,   taxon_key = 3003709,   name = \"Rosa glauca\",   verbose = TRUE ) #> [1] \"Analyzing: Rosa glauca(3003709)\" #> $em_summary #> # A tibble: 1 √ó 5 #>   taxonKey  year em_status growth method #>      <dbl> <dbl>     <dbl>  <dbl> <chr>  #> 1  3003709  2018         3   1.02 basic  #>  #> $model #>  #> Family: Negative Binomial(3.527)  #> Link function: log  #>  #> Formula: #> n ~ s(year, k = maxk, m = 3, bs = \"tp\") #>  #> Estimated degrees of freedom: #> 2  total = 3  #>  #> REML score: 42.28844      #>  #> $output #> # A tibble: 24 √ó 14 #>    taxonKey canonicalName  year     n n_class method   fit   ucl   lcl   em1 #>       <dbl> <chr>         <dbl> <dbl>   <dbl> <chr>  <dbl> <dbl> <dbl> <dbl> #>  1  3003709 Rosa glauca    1995     1     229 basic  0.530  2.25 0.125     0 #>  2  3003709 Rosa glauca    1996     1     555 basic  0.570  1.97 0.165     0 #>  3  3003709 Rosa glauca    1997     0    1116 basic  0.614  1.78 0.212     0 #>  4  3003709 Rosa glauca    1998     0     939 basic  0.664  1.65 0.268     0 #>  5  3003709 Rosa glauca    1999     0     919 basic  0.721  1.58 0.329     0 #>  6  3003709 Rosa glauca    2000     2     853 basic  0.786  1.57 0.394     0 #>  7  3003709 Rosa glauca    2001     0     442 basic  0.859  1.61 0.460     1 #>  8  3003709 Rosa glauca    2002     0     532 basic  0.943  1.70 0.524     1 #>  9  3003709 Rosa glauca    2003     1     623 basic  1.04   1.84 0.587     1 #> 10  3003709 Rosa glauca    2004     3    1178 basic  1.15   2.02 0.651     1 #> # ‚Ñπ 14 more rows #> # ‚Ñπ 4 more variables: em2 <dbl>, em <dbl>, em_status <dbl>, growth <dbl> #>  #> $first_derivative #> # A tibble: 24 √ó 7 #>    smooth  derivative     se  crit  lower_ci upper_ci  year #>    <chr>        <dbl>  <dbl> <dbl>     <dbl>    <dbl> <dbl> #>  1 s(year)     0.0699 0.124   1.28 -0.0891      0.229 1995. #>  2 s(year)     0.0734 0.115   1.28 -0.0739      0.221 1996. #>  3 s(year)     0.0770 0.106   1.28 -0.0588      0.213 1997. #>  4 s(year)     0.0805 0.0970  1.28 -0.0437      0.205 1998. #>  5 s(year)     0.0841 0.0881  1.28 -0.0288      0.197 1999. #>  6 s(year)     0.0876 0.0793  1.28 -0.0140      0.189 2000. #>  7 s(year)     0.0911 0.0707  1.28  0.000581    0.182 2001. #>  8 s(year)     0.0947 0.0623  1.28  0.0149      0.174 2002. #>  9 s(year)     0.0982 0.0542  1.28  0.0288      0.168 2003. #> 10 s(year)     0.102  0.0466  1.28  0.0421      0.161 2004. #> # ‚Ñπ 14 more rows #>  #> $second_derivative #> # A tibble: 24 √ó 7 #>    smooth  derivative      se  crit lower_ci upper_ci  year #>    <chr>        <dbl>   <dbl> <dbl>    <dbl>    <dbl> <dbl> #>  1 s(year)    0.00354 0.00938  1.28 -0.00847   0.0156 1995. #>  2 s(year)    0.00354 0.00938  1.28 -0.00847   0.0156 1996. #>  3 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 1997. #>  4 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 1998. #>  5 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 1999. #>  6 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2000. #>  7 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2001. #>  8 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2002. #>  9 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2003. #> 10 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2004. #> # ‚Ñπ 14 more rows #>  #> $plot  #>  # apply GAM using baseline data in column n_class as covariate apply_gam(df_gam,   y_var = \"n\",   eval_years = 2018,   baseline_var = \"n_class\",   taxon_key = 3003709,   name = \"Rosa glauca\",   verbose = TRUE ) #> [1] \"Analyzing: Rosa glauca(3003709)\" #> $em_summary #> # A tibble: 1 √ó 5 #>   taxonKey  year em_status growth method           #>      <dbl> <dbl>     <dbl>  <dbl> <chr>            #> 1  3003709  2018         1  0.980 correct_baseline #>  #> $model #>  #> Family: Negative Binomial(2.907)  #> Link function: log  #>  #> Formula: #> n ~ s(year, k = maxk, m = 3, bs = \"tp\") + s(n_class) #>  #> Estimated degrees of freedom: #> 2 1  total = 4  #>  #> REML score: 42.23685      #>  #> $output #> # A tibble: 24 √ó 14 #>    taxonKey canonicalName  year     n n_class method       fit   ucl   lcl   em1 #>       <dbl> <chr>         <dbl> <dbl>   <dbl> <chr>      <dbl> <dbl> <dbl> <dbl> #>  1  3003709 Rosa glauca    1995     1     229 correct_b‚Ä¶ 0.488  2.30 0.103     0 #>  2  3003709 Rosa glauca    1996     1     555 correct_b‚Ä¶ 0.522  2.07 0.132     0 #>  3  3003709 Rosa glauca    1997     0    1116 correct_b‚Ä¶ 0.561  1.92 0.164     0 #>  4  3003709 Rosa glauca    1998     0     939 correct_b‚Ä¶ 0.606  1.84 0.200     0 #>  5  3003709 Rosa glauca    1999     0     919 correct_b‚Ä¶ 0.658  1.82 0.239     0 #>  6  3003709 Rosa glauca    2000     2     853 correct_b‚Ä¶ 0.719  1.84 0.280     0 #>  7  3003709 Rosa glauca    2001     0     442 correct_b‚Ä¶ 0.789  1.91 0.325     1 #>  8  3003709 Rosa glauca    2002     0     532 correct_b‚Ä¶ 0.870  2.02 0.375     1 #>  9  3003709 Rosa glauca    2003     1     623 correct_b‚Ä¶ 0.964  2.16 0.431     1 #> 10  3003709 Rosa glauca    2004     3    1178 correct_b‚Ä¶ 1.07   2.32 0.498     1 #> # ‚Ñπ 14 more rows #> # ‚Ñπ 4 more variables: em2 <dbl>, em <dbl>, em_status <dbl>, growth <dbl> #>  #> $first_derivative #> # A tibble: 48 √ó 8 #>    smooth  derivative     se  crit lower_ci upper_ci  year n_class #>    <chr>        <dbl>  <dbl> <dbl>    <dbl>    <dbl> <dbl>   <dbl> #>  1 s(year)     0.0647 0.131   1.28 -0.103      0.232 1995.      NA #>  2 s(year)     0.0698 0.120   1.28 -0.0840     0.224 1996.      NA #>  3 s(year)     0.0749 0.110   1.28 -0.0657     0.216 1997.      NA #>  4 s(year)     0.0800 0.0998  1.28 -0.0479     0.208 1998.      NA #>  5 s(year)     0.0851 0.0902  1.28 -0.0305     0.201 1999.      NA #>  6 s(year)     0.0902 0.0812  1.28 -0.0138     0.194 2000.      NA #>  7 s(year)     0.0953 0.0728  1.28  0.00198    0.189 2001.      NA #>  8 s(year)     0.100  0.0656  1.28  0.0164     0.184 2002.      NA #>  9 s(year)     0.106  0.0597  1.28  0.0291     0.182 2003.      NA #> 10 s(year)     0.111  0.0556  1.28  0.0394     0.182 2004.      NA #> # ‚Ñπ 38 more rows #>  #> $second_derivative #> # A tibble: 48 √ó 8 #>    smooth  derivative     se  crit lower_ci upper_ci  year n_class #>    <chr>        <dbl>  <dbl> <dbl>    <dbl>    <dbl> <dbl>   <dbl> #>  1 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1995.      NA #>  2 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1996.      NA #>  3 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1997.      NA #>  4 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1998.      NA #>  5 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1999.      NA #>  6 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2000.      NA #>  7 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2001.      NA #>  8 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2002.      NA #>  9 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2003.      NA #> 10 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2004.      NA #> # ‚Ñπ 38 more rows #>  #> $plot  #>  # apply GAM using n as occupancy values, evaluate on two years. No baseline apply_gam(df_gam,   y_var = \"n\",   eval_years = c(2017, 2018),   taxon_key = 3003709,   type_indicator = \"occupancy\",   name = \"Rosa glauca\",   y_label = \"occupancy\",   verbose = TRUE ) #> [1] \"Analyzing: Rosa glauca(3003709)\" #> $em_summary #> # A tibble: 2 √ó 5 #>   taxonKey  year em_status growth method #>      <dbl> <dbl>     <dbl>  <dbl> <chr>  #> 1  3003709  2017         3   1.03 basic  #> 2  3003709  2018         3   1.02 basic  #>  #> $model #>  #> Family: Negative Binomial(3.527)  #> Link function: log  #>  #> Formula: #> n ~ s(year, k = maxk, m = 3, bs = \"tp\") #>  #> Estimated degrees of freedom: #> 2  total = 3  #>  #> REML score: 42.28844      #>  #> $output #> # A tibble: 24 √ó 14 #>    taxonKey canonicalName  year     n n_class method   fit   ucl   lcl   em1 #>       <dbl> <chr>         <dbl> <dbl>   <dbl> <chr>  <dbl> <dbl> <dbl> <dbl> #>  1  3003709 Rosa glauca    1995     1     229 basic  0.530  2.25 0.125     0 #>  2  3003709 Rosa glauca    1996     1     555 basic  0.570  1.97 0.165     0 #>  3  3003709 Rosa glauca    1997     0    1116 basic  0.614  1.78 0.212     0 #>  4  3003709 Rosa glauca    1998     0     939 basic  0.664  1.65 0.268     0 #>  5  3003709 Rosa glauca    1999     0     919 basic  0.721  1.58 0.329     0 #>  6  3003709 Rosa glauca    2000     2     853 basic  0.786  1.57 0.394     0 #>  7  3003709 Rosa glauca    2001     0     442 basic  0.859  1.61 0.460     1 #>  8  3003709 Rosa glauca    2002     0     532 basic  0.943  1.70 0.524     1 #>  9  3003709 Rosa glauca    2003     1     623 basic  1.04   1.84 0.587     1 #> 10  3003709 Rosa glauca    2004     3    1178 basic  1.15   2.02 0.651     1 #> # ‚Ñπ 14 more rows #> # ‚Ñπ 4 more variables: em2 <dbl>, em <dbl>, em_status <dbl>, growth <dbl> #>  #> $first_derivative #> # A tibble: 24 √ó 7 #>    smooth  derivative     se  crit  lower_ci upper_ci  year #>    <chr>        <dbl>  <dbl> <dbl>     <dbl>    <dbl> <dbl> #>  1 s(year)     0.0699 0.124   1.28 -0.0891      0.229 1995. #>  2 s(year)     0.0734 0.115   1.28 -0.0739      0.221 1996. #>  3 s(year)     0.0770 0.106   1.28 -0.0588      0.213 1997. #>  4 s(year)     0.0805 0.0970  1.28 -0.0437      0.205 1998. #>  5 s(year)     0.0841 0.0881  1.28 -0.0288      0.197 1999. #>  6 s(year)     0.0876 0.0793  1.28 -0.0140      0.189 2000. #>  7 s(year)     0.0911 0.0707  1.28  0.000581    0.182 2001. #>  8 s(year)     0.0947 0.0623  1.28  0.0149      0.174 2002. #>  9 s(year)     0.0982 0.0542  1.28  0.0288      0.168 2003. #> 10 s(year)     0.102  0.0466  1.28  0.0421      0.161 2004. #> # ‚Ñπ 14 more rows #>  #> $second_derivative #> # A tibble: 24 √ó 7 #>    smooth  derivative      se  crit lower_ci upper_ci  year #>    <chr>        <dbl>   <dbl> <dbl>    <dbl>    <dbl> <dbl> #>  1 s(year)    0.00354 0.00938  1.28 -0.00847   0.0156 1995. #>  2 s(year)    0.00354 0.00938  1.28 -0.00847   0.0156 1996. #>  3 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 1997. #>  4 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 1998. #>  5 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 1999. #>  6 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2000. #>  7 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2001. #>  8 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2002. #>  9 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2003. #> 10 s(year)    0.00354 0.00937  1.28 -0.00847   0.0156 2004. #> # ‚Ñπ 14 more rows #>  #> $plot  #>  # apply GAM using n as occupancy values and n_class as covariate (baseline) apply_gam(df_gam,   y_var = \"n\",   eval_years = c(2017, 2018),   baseline_var = \"n_class\",   taxon_key = 3003709,   type_indicator = \"occupancy\",   name = \"Rosa glauca\",   y_label = \"occupancy\",   verbose = TRUE ) #> [1] \"Analyzing: Rosa glauca(3003709)\" #> $em_summary #> # A tibble: 2 √ó 5 #>   taxonKey  year em_status growth method           #>      <dbl> <dbl>     <dbl>  <dbl> <chr>            #> 1  3003709  2017         1  0.989 correct_baseline #> 2  3003709  2018         1  0.980 correct_baseline #>  #> $model #>  #> Family: Negative Binomial(2.907)  #> Link function: log  #>  #> Formula: #> n ~ s(year, k = maxk, m = 3, bs = \"tp\") + s(n_class) #>  #> Estimated degrees of freedom: #> 2 1  total = 4  #>  #> REML score: 42.23685      #>  #> $output #> # A tibble: 24 √ó 14 #>    taxonKey canonicalName  year     n n_class method       fit   ucl   lcl   em1 #>       <dbl> <chr>         <dbl> <dbl>   <dbl> <chr>      <dbl> <dbl> <dbl> <dbl> #>  1  3003709 Rosa glauca    1995     1     229 correct_b‚Ä¶ 0.488  2.30 0.103     0 #>  2  3003709 Rosa glauca    1996     1     555 correct_b‚Ä¶ 0.522  2.07 0.132     0 #>  3  3003709 Rosa glauca    1997     0    1116 correct_b‚Ä¶ 0.561  1.92 0.164     0 #>  4  3003709 Rosa glauca    1998     0     939 correct_b‚Ä¶ 0.606  1.84 0.200     0 #>  5  3003709 Rosa glauca    1999     0     919 correct_b‚Ä¶ 0.658  1.82 0.239     0 #>  6  3003709 Rosa glauca    2000     2     853 correct_b‚Ä¶ 0.719  1.84 0.280     0 #>  7  3003709 Rosa glauca    2001     0     442 correct_b‚Ä¶ 0.789  1.91 0.325     1 #>  8  3003709 Rosa glauca    2002     0     532 correct_b‚Ä¶ 0.870  2.02 0.375     1 #>  9  3003709 Rosa glauca    2003     1     623 correct_b‚Ä¶ 0.964  2.16 0.431     1 #> 10  3003709 Rosa glauca    2004     3    1178 correct_b‚Ä¶ 1.07   2.32 0.498     1 #> # ‚Ñπ 14 more rows #> # ‚Ñπ 4 more variables: em2 <dbl>, em <dbl>, em_status <dbl>, growth <dbl> #>  #> $first_derivative #> # A tibble: 48 √ó 8 #>    smooth  derivative     se  crit lower_ci upper_ci  year n_class #>    <chr>        <dbl>  <dbl> <dbl>    <dbl>    <dbl> <dbl>   <dbl> #>  1 s(year)     0.0647 0.131   1.28 -0.103      0.232 1995.      NA #>  2 s(year)     0.0698 0.120   1.28 -0.0840     0.224 1996.      NA #>  3 s(year)     0.0749 0.110   1.28 -0.0657     0.216 1997.      NA #>  4 s(year)     0.0800 0.0998  1.28 -0.0479     0.208 1998.      NA #>  5 s(year)     0.0851 0.0902  1.28 -0.0305     0.201 1999.      NA #>  6 s(year)     0.0902 0.0812  1.28 -0.0138     0.194 2000.      NA #>  7 s(year)     0.0953 0.0728  1.28  0.00198    0.189 2001.      NA #>  8 s(year)     0.100  0.0656  1.28  0.0164     0.184 2002.      NA #>  9 s(year)     0.106  0.0597  1.28  0.0291     0.182 2003.      NA #> 10 s(year)     0.111  0.0556  1.28  0.0394     0.182 2004.      NA #> # ‚Ñπ 38 more rows #>  #> $second_derivative #> # A tibble: 48 √ó 8 #>    smooth  derivative     se  crit lower_ci upper_ci  year n_class #>    <chr>        <dbl>  <dbl> <dbl>    <dbl>    <dbl> <dbl>   <dbl> #>  1 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1995.      NA #>  2 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1996.      NA #>  3 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1997.      NA #>  4 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1998.      NA #>  5 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1999.      NA #>  6 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2000.      NA #>  7 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2001.      NA #>  8 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2002.      NA #>  9 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2003.      NA #> 10 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2004.      NA #> # ‚Ñπ 38 more rows #>  #> $plot  #>  # How to use other arguments apply_gam(df_gam,   y_var = \"n\",   eval_years = c(2017, 2018),   baseline_var = \"n_class\",   p_max = 0.3,   taxon_key = \"3003709\",   type_indicator = \"occupancy\",   name = \"Rosa glauca\",   df_title = \"Belgium\",   x_label = \"time (years)\",   y_label = \"area of occupancy (km2)\",   saveplot = TRUE,   dir_name = \"./data/\",   verbose = TRUE ) #> width not provided. Set to 1680 pixels. #> height not provided. Set to 1200 pixels. #> [1] \"Analyzing: Rosa glauca(3003709)\" #> [1] \"Output plot: ./data/GAM_occupancy_correct_baseline_3003709_Rosa glauca_Belgium.png\" #> $em_summary #> # A tibble: 2 √ó 5 #>   taxonKey  year em_status growth method           #>      <dbl> <dbl>     <dbl>  <dbl> <chr>            #> 1  3003709  2017         1  0.989 correct_baseline #> 2  3003709  2018         1  0.980 correct_baseline #>  #> $model #>  #> Family: Negative Binomial(2.907)  #> Link function: log  #>  #> Formula: #> n ~ s(year, k = maxk, m = 3, bs = \"tp\") + s(n_class) #>  #> Estimated degrees of freedom: #> 2 1  total = 4  #>  #> REML score: 42.23685      #>  #> $output #> # A tibble: 24 √ó 14 #>    taxonKey canonicalName  year     n n_class method       fit   ucl   lcl   em1 #>       <dbl> <chr>         <dbl> <dbl>   <dbl> <chr>      <dbl> <dbl> <dbl> <dbl> #>  1  3003709 Rosa glauca    1995     1     229 correct_b‚Ä¶ 0.488  2.30 0.103     0 #>  2  3003709 Rosa glauca    1996     1     555 correct_b‚Ä¶ 0.522  2.07 0.132     0 #>  3  3003709 Rosa glauca    1997     0    1116 correct_b‚Ä¶ 0.561  1.92 0.164     0 #>  4  3003709 Rosa glauca    1998     0     939 correct_b‚Ä¶ 0.606  1.84 0.200     0 #>  5  3003709 Rosa glauca    1999     0     919 correct_b‚Ä¶ 0.658  1.82 0.239     0 #>  6  3003709 Rosa glauca    2000     2     853 correct_b‚Ä¶ 0.719  1.84 0.280     0 #>  7  3003709 Rosa glauca    2001     0     442 correct_b‚Ä¶ 0.789  1.91 0.325     1 #>  8  3003709 Rosa glauca    2002     0     532 correct_b‚Ä¶ 0.870  2.02 0.375     1 #>  9  3003709 Rosa glauca    2003     1     623 correct_b‚Ä¶ 0.964  2.16 0.431     1 #> 10  3003709 Rosa glauca    2004     3    1178 correct_b‚Ä¶ 1.07   2.32 0.498     1 #> # ‚Ñπ 14 more rows #> # ‚Ñπ 4 more variables: em2 <dbl>, em <dbl>, em_status <dbl>, growth <dbl> #>  #> $first_derivative #> # A tibble: 48 √ó 8 #>    smooth  derivative     se  crit lower_ci upper_ci  year n_class #>    <chr>        <dbl>  <dbl> <dbl>    <dbl>    <dbl> <dbl>   <dbl> #>  1 s(year)     0.0647 0.131   1.28 -0.103      0.232 1995.      NA #>  2 s(year)     0.0698 0.120   1.28 -0.0840     0.224 1996.      NA #>  3 s(year)     0.0749 0.110   1.28 -0.0657     0.216 1997.      NA #>  4 s(year)     0.0800 0.0998  1.28 -0.0479     0.208 1998.      NA #>  5 s(year)     0.0851 0.0902  1.28 -0.0305     0.201 1999.      NA #>  6 s(year)     0.0902 0.0812  1.28 -0.0138     0.194 2000.      NA #>  7 s(year)     0.0953 0.0728  1.28  0.00198    0.189 2001.      NA #>  8 s(year)     0.100  0.0656  1.28  0.0164     0.184 2002.      NA #>  9 s(year)     0.106  0.0597  1.28  0.0291     0.182 2003.      NA #> 10 s(year)     0.111  0.0556  1.28  0.0394     0.182 2004.      NA #> # ‚Ñπ 38 more rows #>  #> $second_derivative #> # A tibble: 48 √ó 8 #>    smooth  derivative     se  crit lower_ci upper_ci  year n_class #>    <chr>        <dbl>  <dbl> <dbl>    <dbl>    <dbl> <dbl>   <dbl> #>  1 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1995.      NA #>  2 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1996.      NA #>  3 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1997.      NA #>  4 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1998.      NA #>  5 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 1999.      NA #>  6 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2000.      NA #>  7 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2001.      NA #>  8 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2002.      NA #>  9 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2003.      NA #> 10 s(year)    0.00511 0.0116  1.28 -0.00979   0.0200 2004.      NA #> # ‚Ñπ 38 more rows #>  #> $plot  #>  # warning returned if GAM cannot be applied and plot with only observations df_gam <- tibble( taxonKey = rep(3003709, 24), canonicalName = rep(\"Rosa glauca\", 24), year = seq(1995, 2018), obs = c(   1, 1, 0, 0, 0, 2, 0, 0, 1, 3, 1, 2, 0, 5, 0, 5, 4, 2, 1,   1, 3, 3, 8, 10 ), cobs = rep(0, 24) )  # if GAM cannot be applied a warning is returned and the plot mention it if (FALSE) { # \\dontrun{ no_gam_applied <- apply_gam(df_gam,                             y_var = \"obs\",                             eval_years = 2018,                             taxon_key = 3003709,                             name = \"Rosa glauca\",                             baseline_var = \"cobs\",                             verbose = TRUE ) no_gam_applied$plot } # }"},{"path":"https://trias-project.github.io/trias/reference/climate_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a set of climate matching outputs ‚Äî climate_match","title":"Create a set of climate matching outputs ‚Äî climate_match","text":"function creates set climate matching outputs species set species region nation.","code":""},{"path":"https://trias-project.github.io/trias/reference/climate_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a set of climate matching outputs ‚Äî climate_match","text":"","code":"climate_match(   region,   taxon_key,   zip_file,   scenario = \"all\",   n_limit,   cm_limit,   coord_unc,   BasisOfRecord,   maps = TRUE )"},{"path":"https://trias-project.github.io/trias/reference/climate_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a set of climate matching outputs ‚Äî climate_match","text":"region (optional character) full name target nation region region can also custom region (sf object). taxon_key (character vector) containing GBIF - taxonkey(s) zip_file (optional character) path (inclu. extension) zipfile previous GBIF-download. zipfile contain data species specified taxon_key scenario (character) future scenarios interested . (default) future scenarios used. n_limit (optional numeric) minimal number total observations species must included outputs cm_limit (optional numeric) minimal percentage total number observations within climate zones region species must included outputs coord_unc (optional numeric) maximal coordinate uncertainty observation can included analysis BasisOfRecord (optional character) additional filter observations based GBIF field \"BasisOfRecord\" maps (boolean) indicating whether maps created. (default) TRUE, maps created.","code":""},{"path":"https://trias-project.github.io/trias/reference/climate_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a set of climate matching outputs ‚Äî climate_match","text":"list : unfiltered: dataframe containing summary per species climate classification. climate classification result overlay observations, filtered coord_unc & BasisOfRecord, climate time observation cm: dataframe containing per scenario overlap future climate scenarios target nation region based unfiltered dataframe filtered: climate match dataframe n_limit & climate_limit thresholds applied future: dataframe containing list per scenario future climate zones target nation region spatial sf object containing observations used analysis current_map leaflet object displaying degree worldwide climate match climate 1980 till 2016 future_maps list leaflet objects future climate scenario, displaying degree climate match single_species_maps list leaflet objects per taxon_key displaying current future climate scenarios","code":""},{"path":"https://trias-project.github.io/trias/reference/climate_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a set of climate matching outputs ‚Äî climate_match","text":"","code":"if (FALSE) { # \\dontrun{ region <- \"europe\"  # provide GBIF taxon_key(s) taxon_key <- c(2865504, 5274858)  # download zip_file from GBIF # goto https://www.gbif.org/occurrence/download/0001221-210914110416597  zip_file <- \"./<path to zip_file>/0001221-210914110416597.zip\"  # calculate all climate match outputs # with GBIF download climate_match(region,               taxon_key,                n_limit = 90,               cm_limit = 0.2 ) # calculate only data climate match outputs # using a pre-downloaded zip_file climate_match(region,               taxon_key,                zip_file,               n_limit = 90,               cm_limit = 0.2,               maps = FALSE ) # calculate climate match outputs based  # on human observations with a 100m  # coordinate uncertainty climate_match(region,               taxon_key,                zip_file,               n_limit = 90,               cm_limit = 0.2,               coord_unc = 100,               BasisOfRecord = \"HUMAN_OBSERVATION\",               maps = FALSE ) } # }"},{"path":"https://trias-project.github.io/trias/reference/future.html","id":null,"dir":"Reference","previous_headings":"","what":"Future climate list of sf objects ‚Äî future","title":"Future climate list of sf objects ‚Äî future","text":"sf objects contain future worldwide climate classifications different year intervals. Future scenarios dependent several variables like pollution levels. Currently future datapackage contains following scenarios: A1FI: Rubel & Kottek 2010, quick economic technological growth intensive use fossil fuel Beck: Beck et al. 2018, high emissions","code":""},{"path":"https://trias-project.github.io/trias/reference/future.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Future climate list of sf objects ‚Äî future","text":"","code":"future"},{"path":"https://trias-project.github.io/trias/reference/future.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Future climate list of sf objects ‚Äî future","text":"future list 5 sf objects: 2001-2025-A1F1: A1FI scenario possible climate 2001 2025 2026-2050-A1FI: A1FI scenario possible climate 2026 2050 2051-2075-A1FI: A1FI scenario possible climate 2051 2075 2076-2100-A1FI: A1FI scenario possible climate 2076 2100 2071-2100_Beck: Beck scenario possible climate 2071 2100 sf object contains 3 variables: ID: polygon identifier GRIDCODE: grid value corresponding climate zone geometry: coordinates define polygon's shape","code":""},{"path":"https://trias-project.github.io/trias/reference/future.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Future climate list of sf objects ‚Äî future","text":"Rubel & Kottek 2010 Beck et al. 2018.","code":""},{"path":[]},{"path":"https://trias-project.github.io/trias/reference/gbif_get_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxa information from GBIF ‚Äî gbif_get_taxa","title":"Get taxa information from GBIF ‚Äî gbif_get_taxa","text":"function retrieves taxa information GBIF. higher level function built rgbif functions name_usage() name_lookup().","code":""},{"path":"https://trias-project.github.io/trias/reference/gbif_get_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxa information from GBIF ‚Äî gbif_get_taxa","text":"","code":"gbif_get_taxa(   taxon_keys = NULL,   checklist_keys = NULL,   origin = NULL,   limit = NULL )"},{"path":"https://trias-project.github.io/trias/reference/gbif_get_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxa information from GBIF ‚Äî gbif_get_taxa","text":"taxon_keys (single numeric character vector) single key vector keys. use together checklist_keys. checklist_keys (single character vector) datasetKey (character) vector datasetkeys. use together checklist_keys. origin (single character vector) filter origin. can take many inputs, treated (e.g., b c) used combination checklist_keys. Ignored otherwise. limit taxon_keys: limit number taxa. checklist_keys: limit number taxa per dataset. warning given limit higher length taxon_keys number records checklist_keys (string) checklist_keys (vector)","code":""},{"path":"https://trias-project.github.io/trias/reference/gbif_get_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxa information from GBIF ‚Äî gbif_get_taxa","text":"data.frame returned attributes taxa","code":""},{"path":"https://trias-project.github.io/trias/reference/gbif_get_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get taxa information from GBIF ‚Äî gbif_get_taxa","text":"","code":"if (FALSE) { # \\dontrun{ # A single numeric taxon_keys gbif_get_taxa(taxon_keys = 1) # A single character taxon_keys gbif_get_taxa(taxon_keys = \"1\") # Multiple numeric taxon_keys (vector) gbif_get_taxa(taxon_keys = c(1, 2, 3, 4, 5, 6)) # Multiple character taxon_keys (vector) gbif_get_taxa(taxon_keys = c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\")) # Limit number of taxa (coupled with taxon_keys) gbif_get_taxa(taxon_keys = c(1, 2, 3, 4, 5, 6), limit = 3) # A single checklist_keys (character) gbif_get_taxa(checklist_keys = \"b3fa7329-a002-4243-a7a7-cd066092c9a6\") # Multiple checklist_keys (vector) gbif_get_taxa(checklist_keys = c(   \"e4746398-f7c4-47a1-a474-ae80a4f18e92\",   \"b3fa7329-a002-4243-a7a7-cd066092c9a6\" )) # Limit number of taxa (coupled with checklist_keys) gbif_get_taxa(   checklist_keys = c(     \"e4746398-f7c4-47a1-a474-ae80a4f18e92\",     \"b3fa7329-a002-4243-a7a7-cd066092c9a6\"   ),   limit = 30 ) # Filter by origin gbif_get_taxa(   checklist_keys = \"9ff7d317-609b-4c08-bd86-3bc404b77c42\",   origin = \"source\", limit = 3000 ) gbif_get_taxa(   checklist_keys = \"9ff7d317-609b-4c08-bd86-3bc404b77c42\",   origin = c(\"source\", \"denormed_classification\"), limit = 3000 ) } # }"},{"path":"https://trias-project.github.io/trias/reference/gbif_has_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare desired distribution information with actual one. ‚Äî gbif_has_distribution","title":"Compare desired distribution information with actual one. ‚Äî gbif_has_distribution","text":"function compares GBIF distribution information based single taxon key user requests returns logical (TRUE FALSE). Comparison case insensitive. User properties term treated . function built rgbif function name_usage().","code":""},{"path":"https://trias-project.github.io/trias/reference/gbif_has_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare desired distribution information with actual one. ‚Äî gbif_has_distribution","text":"","code":"gbif_has_distribution(taxon_key, ...)"},{"path":"https://trias-project.github.io/trias/reference/gbif_has_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare desired distribution information with actual one. ‚Äî gbif_has_distribution","text":"taxon_key (single numeric character) single taxon key. ... one GBIF distribution properties related values. now supports following properties: country (synonym: countryCode), status (synonym: occurrenceStatus) establishmentMeans.","code":""},{"path":"https://trias-project.github.io/trias/reference/gbif_has_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare desired distribution information with actual one. ‚Äî gbif_has_distribution","text":"logical, TRUE FALSE.","code":""},{"path":"https://trias-project.github.io/trias/reference/gbif_has_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare desired distribution information with actual one. ‚Äî gbif_has_distribution","text":"","code":"if (FALSE) { # \\dontrun{ # IMPORTANT!  # examples could fail as long as `status` (`occurrenceStatus`) is used due to # an issue of the GBIF API: see https://github.com/gbif/gbif-api/issues/94  # numeric taxonKey, atomic parameters gbif_has_distribution(145953242,   country = \"BE\",   status = \"PRESENT\",   establishmentMeans = \"INTRODUCED\" )  # character taxonKey, distribution properties as vectors, treated as OR gbif_has_distribution(\"145953242\",   country = c(\"NL\", \"BE\"),   status = c(\"PRESENT\", \"DOUBTFUL\") )  # use alternative names: countryCode, occurrenceStatus. # Function works. Warning is given. gbif_has_distribution(\"145953242\",   countryCode = c(\"NL\", \"BE\"),   occurrenceStatus = c(\"PRESENT\", \"DOUBTFUL\") )  # Case insensitive gbif_has_distribution(\"145953242\",   country = \"be\",   status = \"PRESENT\",   establishmentMeans = \"InTrOdUcEd\" ) } # }"},{"path":"https://trias-project.github.io/trias/reference/gbif_verify_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Check keys against GBIF Backbone Taxonomy ‚Äî gbif_verify_keys","title":"Check keys against GBIF Backbone Taxonomy ‚Äî gbif_verify_keys","text":"function performs three checks: keys valid GBIF taxon keys. means adding key end URL https://www.gbif.org/species/ returns GBIF page related taxa. keys taxon keys GBIF Backbone Taxonomy checklist. means adding key end URL https://www.gbif.org/species/ returns GBIF page related taxa GBIF Backbone.) keys synonyms taxa (taxonomicStatus neither ACCEPTED DOUBTFUL).","code":""},{"path":"https://trias-project.github.io/trias/reference/gbif_verify_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check keys against GBIF Backbone Taxonomy ‚Äî gbif_verify_keys","text":"","code":"gbif_verify_keys(keys, col_keys = \"key\")"},{"path":"https://trias-project.github.io/trias/reference/gbif_verify_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check keys against GBIF Backbone Taxonomy ‚Äî gbif_verify_keys","text":"keys (character numeric) vector, list, data.frame containing keys verify. col_keys (character) name column containing keys case keys data.frame.","code":""},{"path":"https://trias-project.github.io/trias/reference/gbif_verify_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check keys against GBIF Backbone Taxonomy ‚Äî gbif_verify_keys","text":"data.frame following columns: key: (numeric) keys input keys. is_taxonKey: (logical) key valid GBIF taxon key? is_from_gbif_backbone: (logical) key valid taxon key GBIF Backbone Taxonomy checklist? is_synonym: (logical) key related synonym (ACCEPTED DOUBTFUL)? key pass first check (is_taxonKey = FALSE) NA two columns. key pass second check (is_from_gbif_backbone = FALSE) is_synonym = NA.","code":""},{"path":"https://trias-project.github.io/trias/reference/gbif_verify_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check keys against GBIF Backbone Taxonomy ‚Äî gbif_verify_keys","text":"","code":"if (FALSE) { # \\dontrun{ # input is a vector keys1 <- c(   \"12323785387253\", # invalid GBIF taxonKey   \"128545334\", # valid taxonKey, not a GBIF Backbone key   \"1000693\", # a GBIF Backbone key, synonym   \"1000310\", # a GBIF Backbone key, accepted   NA, NA ) # input is a df keys2 <- data.frame(   keys = keys1,   other_col = sample.int(40, size = length(keys1)),   stringsAsFactors = FALSE ) # input is a named list keys3 <- keys1 names(keys3) <- purrr::map_chr(   c(1:length(keys3)),   ~ paste(sample(c(0:9, letters, LETTERS), 3),     collapse = \"\"   ) ) # input keys are numeric keys4 <- as.numeric(keys1)  gbif_verify_keys(keys1) gbif_verify_keys(keys2, col_keys = \"keys\") gbif_verify_keys(keys3) gbif_verify_keys(keys4) } # }"},{"path":"https://trias-project.github.io/trias/reference/get_table_pathways.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathway count indicator table ‚Äî get_table_pathways","title":"Pathway count indicator table ‚Äî get_table_pathways","text":"Function get number taxa introduced different pathways. Possible breakpoints: taxonomic (kingdom + vertebrates/invertebrates), temporal (lower limit year).","code":""},{"path":"https://trias-project.github.io/trias/reference/get_table_pathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathway count indicator table ‚Äî get_table_pathways","text":"","code":"get_table_pathways(   df,   category = NULL,   from = NULL,   n_species = 5,   kingdom_names = \"kingdom\",   phylum_names = \"phylum\",   first_observed = \"first_observed\",   species_names = \"canonicalName\" )"},{"path":"https://trias-project.github.io/trias/reference/get_table_pathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pathway count indicator table ‚Äî get_table_pathways","text":"df df. category NULL character. One kingdoms given GBIF: \"Plantae\" \"Animalia\" \"Fungi\" \"Chromista\" \"Archaea\" \"Bacteria\" \"Protozoa\" \"Viruses\" \"incertae sedis\" can also one following kingdoms: #' Chordata. Default: NULL. NULL numeric. Year trade-: NULL select pathways related taxa introduced year. Default: NULL. n_species numeric. maximum number species return examples per pathway. groups less species n_species, species given. Default: 5. kingdom_names character. Name column df containing information kingdom. Default: \"kingdom\". phylum_names character. Name column df containing information phylum. parameter used category one :  \"Chordata\", \"Chordata\".  Default: \"phylum\". first_observed character. Name column df containing information year introduction. Default: \"first_observed\". species_names character. Name column df containing information species names. Default: \"canonicalName\".","code":""},{"path":"https://trias-project.github.io/trias/reference/get_table_pathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pathway count indicator table ‚Äî get_table_pathways","text":"data.frame 4 columns: pathway_level1, pathway_level2, n (number taxa) examples.","code":""},{"path":"https://trias-project.github.io/trias/reference/get_table_pathways.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pathway count indicator table ‚Äî get_table_pathways","text":"","code":"if (FALSE) { # \\dontrun{ library(readr) datafile <- paste0(   \"https://raw.githubusercontent.com/trias-project/indicators/master/data/\",   \"interim/data_input_checklist_indicators.tsv\" ) data <- read_tsv(datafile,   na = \"NA\",   col_types = cols(     .default = col_character(),     key = col_double(),     nubKey = col_double(),     speciesKey = col_double(),     acceptedKey = col_double(),     first_observed = col_double(),     last_observed = col_double()   ) ) get_table_pathways(data) # Specify kingdom get_table_pathways(data, \"Plantae\") # with special categories, `Chordata` or `not Chordata` get_table_pathways(data, \"Chordata\") get_table_pathways(data, \"Not Chordata\") # From 2000 get_table_pathways(data, from = 2000, first_observed = \"first_observed\") # Specify number of species to include in examples get_table_pathways(data, \"Plantae\", n_species = 8) # Specify columns containing kingdom and species names get_table_pathways(data,   \"Plantae\",   n_species = 8,   kingdom_names = \"kingdom\",   species_names = \"canonicalName\" ) } # }"},{"path":"https://trias-project.github.io/trias/reference/indicator_introduction_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot number of new introductions per year. ‚Äî indicator_introduction_year","title":"Plot number of new introductions per year. ‚Äî indicator_introduction_year","text":"Calculate many new species introduced year.","code":""},{"path":"https://trias-project.github.io/trias/reference/indicator_introduction_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot number of new introductions per year. ‚Äî indicator_introduction_year","text":"","code":"indicator_introduction_year(   df,   start_year_plot = 1920,   smooth_span = 0.85,   x_major_scale_stepsize = 10,   x_minor_scale_stepsize = 5,   facet_column = NULL,   taxon_key_col = \"key\",   first_observed = \"first_observed\",   x_lab = \"Year\",   y_lab = \"Number of introduced alien species\" )"},{"path":"https://trias-project.github.io/trias/reference/indicator_introduction_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot number of new introductions per year. ‚Äî indicator_introduction_year","text":"df data frame. start_year_plot Year plot starts . Default: 1920. smooth_span (numeric) Parameter applied loess smoother. information appropriate value, see ggplot2::geom_smooth(). Default: 0.85. x_major_scale_stepsize (integer) Parameter indicates breaks x axis. Default: 10. x_minor_scale_stepsize (integer) Parameter indicates minor breaks x axis. Default: 5. facet_column NULL character. column use create additional facet wrap plots underneath main graph. NULL, facet graph created. Valid facet options: \"family\", \"order\", \"class\", \"phylum\", \"kingdom\", \"pathway_level1\", \"locality\", \"native_range\"  \"habitat\". Default: NULL. taxon_key_col character. Name column df containing unique taxon IDs. Default: key. first_observed character. Name column df containing information year introduction. Default: first_observed. x_lab NULL character. set remove x-axis label. y_lab NULL character. set remove y-axis label.","code":""},{"path":"https://trias-project.github.io/trias/reference/indicator_introduction_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot number of new introductions per year. ‚Äî indicator_introduction_year","text":"list three slots: plot: ggplot2 object (egg object facets used). data_top_graph: data.frame (tibble) data used main plot (top graph) plot. data_facet_graph: data.frame (tibble) data used faceting plot plot. facet_column NULL, NULL returned.","code":""},{"path":"https://trias-project.github.io/trias/reference/indicator_introduction_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot number of new introductions per year. ‚Äî indicator_introduction_year","text":"","code":"if (FALSE) { # \\dontrun{ library(readr) datafile <- paste0(   \"https://raw.githubusercontent.com/trias-project/indicators/master/data/\",   \"interim/data_input_checklist_indicators.tsv\" ) data <- read_tsv(datafile,   na = \"\",   col_types = cols(     .default = col_character(),     key = col_double(),     nubKey = col_double(),     speciesKey = col_double(),     first_observed = col_double(),     last_observed = col_double()   ) ) # without facets indicator_introduction_year(data) # specify start year and smoother parameter indicator_introduction_year(data,   start_year_plot = 1940,   smooth_span = 0.6 ) # with facets indicator_introduction_year(data, facet_column = \"kingdom\") # specify columns with year of first observed indicator_introduction_year(data,   first_observed = \"first_observed\" ) # specify axis labels indicator_introduction_year(data, x_lab = \"YEAR\", y_lab = NULL) } # }"},{"path":"https://trias-project.github.io/trias/reference/indicator_native_range_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interactive plot for the number of alien species per native region and year of introduction ‚Äî indicator_native_range_year","title":"Create an interactive plot for the number of alien species per native region and year of introduction ‚Äî indicator_native_range_year","text":"Based countYearProvince plot reporting - rshiny - grofwildjacht","code":""},{"path":"https://trias-project.github.io/trias/reference/indicator_native_range_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interactive plot for the number of alien species per native region and year of introduction ‚Äî indicator_native_range_year","text":"","code":"indicator_native_range_year(   df,   years = NULL,   type = c(\"native_range\", \"native_continent\"),   x_major_scale_stepsize = 10,   x_lab = \"year\",   y_lab = \"alien species\",   response_type = c(\"absolute\", \"relative\", \"cumulative\"),   relative = lifecycle::deprecated(),   taxon_key_col = \"key\",   first_observed = \"first_observed\" )"},{"path":"https://trias-project.github.io/trias/reference/indicator_native_range_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interactive plot for the number of alien species per native region and year of introduction ‚Äî indicator_native_range_year","text":"df input data.frame. years (numeric) vector years interested . NULL (default) years minimum maximum years first observation taken account. type character, native_range level interest one c(\"native_range\", \"native_continent\"). Default: \"native_range\". column called selected type must present df. x_major_scale_stepsize (integer) Parameter indicates breaks x axis. Default: 10. x_lab character string, label x-axis. Default: \"year\". y_lab character string, label y-axis. Default: \"number alien species\". response_type (character) summary type response displayed; one c(\"absolute\", \"relative\", \"cumulative\"). Default: \"absolute\". \"absolute\" number per year location displayed; \"relative\" bar standardised per year stacking; \"cumulative\" cumulative number years per location. relative (logical) TRUE bar standardised stacking. Deprecated, use response_type = \"relative\" instead. taxon_key_col character. Name column df containing taxon IDs. Default: \"key\". first_observed (character) Name column data containing temporal information introduction alien species. Expressed years.","code":""},{"path":"https://trias-project.github.io/trias/reference/indicator_native_range_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an interactive plot for the number of alien species per native region and year of introduction ‚Äî indicator_native_range_year","text":"list : static_plot: ggplot object, given species observed number per year per native range plotted stacked bar chart. interactive_plot: plotly object, given species observed number per year per native range plotted stacked bar chart. data: data displayed plot, data.frame : year: year species introduced. native_range: native range introduced species. n: number species introduced native range given year. total: total number species, around world, introduced. given year. perc: percentage species introduced native range given year, n/total*100.","code":""},{"path":"https://trias-project.github.io/trias/reference/indicator_native_range_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an interactive plot for the number of alien species per native region and year of introduction ‚Äî indicator_native_range_year","text":"","code":"if (FALSE) { # \\dontrun{ library(readr) datafile <- paste0(   \"https://raw.githubusercontent.com/trias-project/indicators/master/data/\",   \"interim/data_input_checklist_indicators.tsv\" ) data <- read_tsv(datafile,   na = \"\",   col_types = cols(     .default = col_character(),     key = col_double(),     nubKey = col_double(),     speciesKey = col_double(),     first_observed = col_double(),     last_observed = col_double()   ) ) indicator_native_range_year(data, \"native_continent\", years = c(2010,2013)) } # }"},{"path":"https://trias-project.github.io/trias/reference/indicator_total_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cumulative number of alien species indicator plot. ‚Äî indicator_total_year","title":"Create cumulative number of alien species indicator plot. ‚Äî indicator_total_year","text":"function calculates cumulative number taxa introduced per year. , column input dataframe containing temporal information year introduction required.","code":""},{"path":"https://trias-project.github.io/trias/reference/indicator_total_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cumulative number of alien species indicator plot. ‚Äî indicator_total_year","text":"","code":"indicator_total_year(   df,   start_year_plot = 1940,   x_major_scale_stepsize = 10,   x_minor_scale_stepsize = 5,   facet_column = NULL,   taxon_key_col = \"key\",   first_observed = \"first_observed\",   x_lab = \"Year\",   y_lab = \"Cumulative number of alien species\" )"},{"path":"https://trias-project.github.io/trias/reference/indicator_total_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cumulative number of alien species indicator plot. ‚Äî indicator_total_year","text":"df df. Contains data produced Trias pipeline, minimal columns. start_year_plot numeric. Limit use start year plot. scientific usage, entire period relevant, policy purpose, focusing recent period required. Default: 1940. x_major_scale_stepsize integer. year interval labels placed x axis. Default: 10. x_minor_scale_stepsize integer. year interval minor breaks placed x axis. Default: 5. facet_column NULL character. Name column use create additional facet wrap plots underneath main graph. NULL, facet graph included. typically one highest taxonomic ranks, e.g. \"kingdom\", \"phylum\", \"class\", \"order\", \"family\". typical breakwdowns geographically related, e.g. \"country\", \"locality\", \"pathway\" introduction \"habitat\". Default: NULL. taxon_key_col character. Name column df containing unique taxon IDs. Default: key. first_observed character. Name column df containing information year introduction. Default: \"first_observed\". x_lab NULL character. personalize remove x-axis label. Default: \"Year. y_lab NULL character. personalize remove y-axis label. Default: \"Cumulative number alien species\".","code":""},{"path":"https://trias-project.github.io/trias/reference/indicator_total_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create cumulative number of alien species indicator plot. ‚Äî indicator_total_year","text":"list three slots: plot: ggplot2 object (egg object facets used). data_top_graph: data.frame (tibble) data used main plot (top graph) plot. data_facet_graph: data.frame (tibble) data used faceting plot plot. facet_column NULL, NULL returned.","code":""},{"path":"https://trias-project.github.io/trias/reference/indicator_total_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create cumulative number of alien species indicator plot. ‚Äî indicator_total_year","text":"","code":"if (FALSE) { # \\dontrun{ library(readr) datafile <- paste0(   \"https://raw.githubusercontent.com/trias-project/indicators/master/data/\",   \"interim/data_input_checklist_indicators.tsv\" ) data <- read_tsv(datafile,   na = \"\",   col_types = cols(     .default = col_character(),     key = col_double(),     nubKey = col_double(),     speciesKey = col_double(),     first_observed = col_double(),     last_observed = col_double()   ) ) start_year_plot <- 1900 x_major_scale_stepsize <- 25 x_minor_scale_stepsize <- 5 # without facets indicator_total_year(data, start_year_plot, x_major_scale_stepsize) # with facets indicator_total_year(data, start_year_plot, facet_column = \"kingdom\") # specify name of column containing year of introduction (first_observed) indicator_total_year(data, first_observed = \"first_observed\") # specify axis labels indicator_total_year(data, x_lab = \"YEAR\", y_lab = NULL) } # }"},{"path":"https://trias-project.github.io/trias/reference/legends.html","id":null,"dir":"Reference","previous_headings":"","what":"Legends for climate shapefiles ‚Äî legends","title":"Legends for climate shapefiles ‚Äî legends","text":"Legends climate shapefiles","code":""},{"path":"https://trias-project.github.io/trias/reference/legends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legends for climate shapefiles ‚Äî legends","text":"","code":"legends"},{"path":"https://trias-project.github.io/trias/reference/legends.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Legends for climate shapefiles ‚Äî legends","text":"legends contains two data.frames, KG_A1FI KG_Beck, matching Koppen-Geiger climate zones A1FI Beck scenarios respectively. data.frame contains two columns: GRIDCODE: (numeric) grid value corresponding climate zone Classification: (character) Koppen-Geiger climate classification value Description: (character) verbose description Koppen-Geiger climate zone, e.g. \"Tropical rainforest climate\" Group: (character) group Koppen-Geiger climate zone belongs , e.g. \"Tropical\" Precipitation Type: (character) Type precipitations associated climate zone, e.g. \"Rainforest\" Level Heat: (character) Heat level associated climate zone, e.g. \"Cold\"","code":""},{"path":"https://trias-project.github.io/trias/reference/legends.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Legends for climate shapefiles ‚Äî legends","text":"Koppen-Geiger climate zones","code":""},{"path":[]},{"path":"https://trias-project.github.io/trias/reference/observed.html","id":null,"dir":"Reference","previous_headings":"","what":"Historical climate sf objects ‚Äî observed","title":"Historical climate sf objects ‚Äî observed","text":"sf objects contain worldwide climate classifications different year intervals.","code":""},{"path":"https://trias-project.github.io/trias/reference/observed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historical climate sf objects ‚Äî observed","text":"","code":"observed"},{"path":"https://trias-project.github.io/trias/reference/observed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Historical climate sf objects ‚Äî observed","text":"observed list 5 sf objects: 1901-1925: observed climate data 1901 1925 1925-1950: observed climate data 1926 1950 1950- 1975: observed climate data 1951 1975 1976-2000: observed climate data 1976 2000 1980-2016: observed climate data 1980 2016 sf object contains 3 variables: ID: polygon identifier GRIDCODE: grid value corresponding climate zone geometry: coordinates define polygon's shape","code":""},{"path":"https://trias-project.github.io/trias/reference/observed.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Historical climate sf objects ‚Äî observed","text":"objects originate Rubel & Kottek 2010, except last one, data 1980 2016, based Beck et al. 2018.","code":""},{"path":[]},{"path":"https://trias-project.github.io/trias/reference/pathways_cbd.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathways of introduction as defined by CBD ‚Äî pathways_cbd","title":"Pathways of introduction as defined by CBD ‚Äî pathways_cbd","text":"Function get CBD pathays introdution level 1 (pathway_level1) level 2 (pathway_level2). Added pathway unknown level 1 level 2 classifying taxa without pathway (level 1 level 2) information.","code":""},{"path":"https://trias-project.github.io/trias/reference/pathways_cbd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathways of introduction as defined by CBD ‚Äî pathways_cbd","text":"","code":"pathways_cbd()"},{"path":"https://trias-project.github.io/trias/reference/pathways_cbd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pathways of introduction as defined by CBD ‚Äî pathways_cbd","text":"tibble data.frame 2 columns: pathway_level1 pathway_level2.","code":""},{"path":"https://trias-project.github.io/trias/reference/plot_ribbon_em.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot time series with confidence limits and emerging status ‚Äî plot_ribbon_em","title":"Plot time series with confidence limits and emerging status ‚Äî plot_ribbon_em","text":"Plot time series confidence limits emerging status","code":""},{"path":"https://trias-project.github.io/trias/reference/plot_ribbon_em.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot time series with confidence limits and emerging status ‚Äî plot_ribbon_em","text":"","code":"plot_ribbon_em(   df_plot,   x_axis = \"year\",   y_axis = \"obs\",   x_label = \"x\",   y_label = \"y\",   ptitle = NULL,   verbose = FALSE )"},{"path":"https://trias-project.github.io/trias/reference/plot_ribbon_em.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot time series with confidence limits and emerging status ‚Äî plot_ribbon_em","text":"df_plot df. data.frame containing data plot. x_axis character. Name column containing x-values. Default: \"year\". y_axis character. Name column containing y-values. Default: \"number observations\". x_label character. x-axis label. Default: \"x\". y_label character. y-axis label. Default: \"y\". ptitle character. Plot title. Default: NULL. verbose logical. TRUE, informations possible issues returned. Default: FALSE.","code":""},{"path":"https://trias-project.github.io/trias/reference/plot_ribbon_em.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot time series with confidence limits and emerging status ‚Äî plot_ribbon_em","text":"ggplot2 plot object.","code":""},{"path":"https://trias-project.github.io/trias/reference/update_download_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the list with all downloads ‚Äî update_download_list","title":"Update the list with all downloads ‚Äî update_download_list","text":"function opens (tab-separated) text file containing occurrence downloads GBIF updates status downloads status RUNNING PREPARING. specified download present add.","code":""},{"path":"https://trias-project.github.io/trias/reference/update_download_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the list with all downloads ‚Äî update_download_list","text":"","code":"update_download_list(   file,   download_to_add,   input_checklist,   url_doi_base = \"https://doi.org/\" )"},{"path":"https://trias-project.github.io/trias/reference/update_download_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the list with all downloads ‚Äî update_download_list","text":"file text file (tab separated) containing occurrence downloads GBIF. File contain following columns: gbif_download_key: GBIF download keys, e.g. 0012078-181003121212138 input_checklist: filename link readable text file containing list queried taxa gbif_download_created: datetime GBIF download creation returned rgbif function  occ_download_meta gbif_download_status: status GBIF download returned returned rgbif function  occ_download_meta, e.g. RUNNING, PREPARING, SUCCEDEED gbif_download_doi: DOI link returned returned rgbif function  occ_download_meta (e.g. 10.15468/dl.kg0uxf) + url_doi_base value (see ) download_to_add character. GBIF download key added file. input_checklist text file taxon keys whose occurrences want download url_doi_base character. doi base URL; url_doi_base + doi form link page download information. Default: \"https://doi.org/\".","code":""},{"path":"https://trias-project.github.io/trias/reference/update_download_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the list with all downloads ‚Äî update_download_list","text":"message performed updates","code":""},{"path":"https://trias-project.github.io/trias/reference/update_download_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update the list with all downloads ‚Äî update_download_list","text":"download key passed present file added new line.","code":""},{"path":"https://trias-project.github.io/trias/reference/verify_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify taxa that the GBIF Backbone Taxonomy does not recognize or will lump ‚Äî verify_taxa","title":"Verify taxa that the GBIF Backbone Taxonomy does not recognize or will lump ‚Äî verify_taxa","text":"Verify taxa GBIF Backbone Taxonomy recognize (backbone match) lump another name (synonyms). done adding verificationKey input dataframe, populated : ACCEPTED DOUBTFUL taxa: backbone taxon key taxon (taxon unit lumped). taxa: manually chosen thus verified backbone taxon key. either taxon key : accepted taxon suggested GBIF: backbone synonymy accepted taxon lumped. another accepted taxon: backbone synonymy rejected, taxon lumped another name. taxon : backbone synonymy rejected, taxon considered separate taxon. taxon/taxa: automatic backbone match failed, taxon can considered/lumped manually found taxon/taxa (e.g. hybrid formula considered equal hybrid parents). manually chosen verificationKey provided verification: dataframe (probably read file) listing checklist taxon/backbone taxon/accepted taxon combinations require verification. function update provided verification based input taxa create new one none provided. changes verification also provided ancillary information.","code":""},{"path":"https://trias-project.github.io/trias/reference/verify_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify taxa that the GBIF Backbone Taxonomy does not recognize or will lump ‚Äî verify_taxa","text":"","code":"verify_taxa(   taxa,   verification = NULL,   taxonKey = \"taxonKey\",   scientificName = \"scientificName\",   datasetKey = \"datasetKey\",   bb_key = \"bb_key\",   bb_scientificName = \"bb_scientificName\",   bb_kingdom = \"bb_kingdom\",   bb_rank = \"bb_rank\",   bb_taxonomicStatus = \"bb_taxonomicStatus\",   bb_acceptedKey = \"bb_acceptedKey\",   bb_acceptedName = \"bb_acceptedName\",   verification_taxonKey = \"taxonKey\",   verification_scientificName = \"scientificName\",   verification_datasetKey = \"datasetKey\",   verification_bb_key = \"bb_key\",   verification_bb_scientificName = \"bb_scientificName\",   verification_bb_kingdom = \"bb_kingdom\",   verification_bb_rank = \"bb_rank\",   verification_bb_taxonomicStatus = \"bb_taxonomicStatus\",   verification_bb_acceptedKey = \"bb_acceptedKey\",   verification_bb_acceptedName = \"bb_acceptedName\",   verification_bb_acceptedKingdom = \"bb_acceptedKingdom\",   verification_bb_acceptedRank = \"bb_acceptedRank\",   verification_bb_acceptedTaxonomicStatus = \"bb_acceptedTaxonomicStatus\",   verification_verificationKey = \"verificationKey\",   verification_remarks = \"remarks\",   verification_verifiedBy = \"verifiedBy\",   verification_dateAdded = \"dateAdded\",   verification_outdated = \"outdated\" )"},{"path":"https://trias-project.github.io/trias/reference/verify_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify taxa that the GBIF Backbone Taxonomy does not recognize or will lump ‚Äî verify_taxa","text":"taxa df. Dataframe least following (default) columns taxon: taxonKey: numeric. Non-backbone checklist taxon key assigned GBIF. scientificName: character. Scientific name interpreted GBIF. datasetKey: character. Dataset key (UUID) assigned GBIF originating checklist. bb_key: numeric. Taxon key matching backbone taxon (). bb_scientificName: character. Scientific name matching backbone taxon. bb_kingdom: character. Kingdom matching backbone taxon. bb_rank: character. Rank matching backbone taxon. bb_taxonomicStatus: character. Taxonomic status matching backbone taxon. bb_acceptedKey: numeric. Accepted key taxon matching backbone taxon considered synonym. bb_acceptedName: character. Accepted name taxon matching backbone taxon considered synonym. verification df. Dataframe least following columns checklist taxon/backbone taxon/accepted taxon combination: taxonKey: numeric. Non-backbone checklist taxon key assigned GBIF. scientificName: character. Scientific name interpreted GBIF. datasetKey: character. Dataset key (UUID) assigned GBIF originating checklist. bb_key: numeric. Taxon key matching backbone taxon (). bb_scientificName: character. Scientific name matching backbone taxon. bb_kingdom: character. Kingdom matching backbone taxon. bb_rank: character. Rank matching backbone taxon. bb_taxonomicStatus: character. Taxonomic status matching backbone taxon. bb_acceptedKey: numeric. Taxon key accepted backbone taxon case matching backbone taxon considered synonym. bb_acceptedName: character. Scientific name accepted backbone taxon case matching backbone taxon considered synonym. bb_acceptedKingdom: character. Kingdom accepted taxon. Expected equal bb_kingdom. bb_acceptedRank: character. Rank accepted taxon. bb_acceptedTaxonomicStatus: character. Taxonomic status accepted taxon. Expected ACCEPTED. verificationKey: character. Taxon key(s) backbone taxon manually set expert. remarks: character. Remarks provided expert. verifiedBy: character. Name person assigned verificationKey. dateAdded: date. Date new combinations added. outdated: logical. TRUE combination used input taxa. taxonKey, scientificName, datasetKey, bb_key, bb_scientificName, bb_kingdom, bb_rank, bb_taxonomicStatus, bb_acceptedKey, bb_acceptedName Column names required columns taxa. passed strings, e.g. \"taxon_keys\". Default: column names specified taxa. verification_taxonKey, verification_scientificName, verification_datasetKey, verification_bb_key, verification_bb_scientificName, verification_bb_kingdom, verification_bb_rank, verification_bb_taxonomicStatus, verification_bb_acceptedKey, verification_bb_acceptedName, verification_bb_acceptedKingdom, verification_bb_acceptedRank, verification_bb_acceptedTaxonomicStatus, verification_verificationKey, verification_remarks, verification_verifiedBy, verification_dateAdded, verification_outdated Column names required columns verification. passed strings, e.g. \"verification_taxon_keys\". Default: column names specified verification.","code":""},{"path":"https://trias-project.github.io/trias/reference/verify_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify taxa that the GBIF Backbone Taxonomy does not recognize or will lump ‚Äî verify_taxa","text":"list. List three objects: taxa: df. Provided dataframe additional column verificationKey. verification: df. New updated dataframe verification information. info: list. Dataframes ancillary information regarding changes verification. new_synonyms: df. Subset verification synonym taxa found taxa provided verification). new_unmatched_taxa: df. Subset verification unmatched taxa found taxa provided verification). outdated_synonyms: df. Subset verification synonyms found provided verification taxa. outdated_unmatched_taxa: df. Subset verification unmatched taxa found provided verification taxa. updated_bb_scientificName: df. bb_scientificNames provided verification updated updated_bb_scientificName backbone since. updated_bb_acceptedName: df. bb_acceptedNames provided verification updated updated_bb_acceptedName backbone since. duplicates: df. Taxa present one checklist. check_verificationKey: df. Check provided verificationKeys can found backbone.","code":""},{"path":"https://trias-project.github.io/trias/reference/verify_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify taxa that the GBIF Backbone Taxonomy does not recognize or will lump ‚Äî verify_taxa","text":"","code":"if (FALSE) { # \\dontrun{ my_taxa <- data.frame(   taxonKey = c(     141117238,     113794952,     141264857,     100480872,     141264614,     100220432,     141264835,     140563014,     140562956,     145953989,     148437916,     114445583,     141264849,     101790530   ),   scientificName = c(     \"Aspius aspius\",     \"Rana catesbeiana\",     \"Polystichum tsus-simense J.Smith\",     \"Apus apus (Linnaeus, 1758)\",     \"Begonia x semperflorens hort.\",     \"Rana catesbeiana\",     \"Spiranthes cernua (L.) Richard x S. odorata (Nuttall) Lindley\",     \"Atyaephyra desmaresti\",     \"Ferrissia fragilis\",     \"Ferrissia fragilis\",     \"Ferrissia fragilis\",     \"Rana blanfordii Boulenger\",     \"Pterocarya x rhederiana C.K. Schneider\",     \"Stenelmis williami Schmude\"   ),   datasetKey = c(     \"98940a79-2bf1-46e6-afd6-ba2e85a26f9f\",     \"e4746398-f7c4-47a1-a474-ae80a4f18e92\",     \"9ff7d317-609b-4c08-bd86-3bc404b77c42\",     \"39653f3e-8d6b-4a94-a202-859359c164c5\",     \"9ff7d317-609b-4c08-bd86-3bc404b77c42\",     \"b351a324-77c4-41c9-a909-f30f77268bc4\",     \"9ff7d317-609b-4c08-bd86-3bc404b77c42\",     \"289244ee-e1c1-49aa-b2d7-d379391ce265\",     \"289244ee-e1c1-49aa-b2d7-d379391ce265\",     \"3f5e930b-52a5-461d-87ec-26ecd66f14a3\",     \"1f3505cd-5d98-4e23-bd3b-ffe59d05d7c2\",     \"3772da2f-daa1-4f07-a438-15a881a2142c\",     \"9ff7d317-609b-4c08-bd86-3bc404b77c42\",     \"9ca92552-f23a-41a8-a140-01abaa31c931\"   ),   bb_key = c(     2360181,     2427092,     2651108,     5228676,     NA,     2427092,     NA,     4309705,     2291152,     2291152,     2291152,     2430304,     NA,     1033588   ),   bb_scientificName = c(     \"Aspius aspius (Linnaeus, 1758)\",     \"Rana catesbeiana Shaw, 1802\",     \"Polystichum tsus-simense (Hook.) J.Sm.\",     \"Apus apus (Linnaeus, 1758)\",     NA,     \"Rana catesbeiana Shaw, 1802\",     NA,     \"Atyaephyra desmarestii (Millet, 1831)\",     \"Ferrissia fragilis (Tryon, 1863)\",     \"Ferrissia fragilis (Tryon, 1863)\",     \"Ferrissia fragilis (Tryon, 1863)\",     \"Rana blanfordii Boulenger, 1882\",     NA,     \"Stenelmis williami Schmude\"   ),   bb_kingdom = c(     \"Animalia\",     \"Animalia\",     \"Plantae\",     \"Animalia\",     NA,     \"Animalia\",     NA,     \"Animalia\",     \"Animalia\",     \"Animalia\",     \"Animalia\",     \"Animalia\",     NA,     \"Animalia\"   ),   bb_rank = c(     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     NA,     \"SPECIES\",     NA,     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     NA,     \"SPECIES\"   ),   bb_taxonomicStatus = c(     \"SYNONYM\",     \"SYNONYM\",     \"SYNONYM\",     \"ACCEPTED\",     NA,     \"SYNONYM\",     NA,     \"HOMOTYPIC_SYNONYM\",     \"SYNONYM\",     \"SYNONYM\",     \"SYNONYM\",     \"SYNONYM\",     NA,     \"SYNONYM\"   ),   bb_acceptedKey = c(     5851603,     2427091,     4046493,     NA,     NA,     2427091,     NA,     6454754,     9520065,     9520065,     9520065,     2430301,     NA,     1033553   ),   bb_acceptedName = c(     \"Leuciscus aspius (Linnaeus, 1758)\",     \"Lithobates catesbeianus (Shaw, 1802)\",     \"Polystichum luctuosum (Kunze) Moore.\",     NA,     NA,     \"Lithobates catesbeianus (Shaw, 1802)\",     NA,     \"Hippolyte desmarestii Millet, 1831\",     \"Ferrissia californica (Rowell, 1863)\",     \"Ferrissia californica (Rowell, 1863)\",     \"Ferrissia californica (Rowell, 1863)\",     \"Nanorana blanfordii (Boulenger, 1882)\",     NA,     \"Stenelmis Dufour, 1835\"   ),   taxonID = c(     \"alien-fishes-checklist:taxon:c937610f85ea8a74f105724c8f198049\",     \"88\",     \"alien-plants-belgium:taxon:57c1d111f14fd5f3271b0da53c05c745\",     \"4512\",     \"alien-plants-belgium:taxon:9a6c5ed8907ff169433fe44fcbff0705\",     \"80-syn\",     \"alien-plants-belgium:taxon:29409d1e1adc88d6357dd0be13350d6c\",     \"alien-macroinvertebrates-checklist:taxon:54cca150e1e0b7c0b3f5b152ae64d62b\",     \"alien-macroinvertebrates-checklist:taxon:73f271d93128a4e566e841ea6e3abff0\",     \"rinse-checklist:taxon:7afe7b1fbdd06cbdfe97272567825c09\",     \"ad-hoc-checklist:taxon:32dc2e18733fffa92ba4e1b35d03c4e2\",     \"a80caa33-da9d-48ed-80e3-f76b0b3810f9\",     \"alien-plants-belgium:taxon:56d6564f59d9092401c454849213366f\",     \"193729\"   ),   stringsAsFactors = FALSE )  my_verification <- data.frame(   taxonKey = c(     113794952,     141264857,     143920280,     141264835,     141264614,     140562956,     145953989,     114445583,     128897752,     101790530,     141265523   ),   scientificName = c(     \"Rana catesbeiana\",     \"Polystichum tsus-simense J.Smith\",     \"Lemnaceae\",     \"Spiranthes cernua (L.) Richard x S. odorata (Nuttall) Lindley\",     \"Begonia x semperflorens hort.\",     \"Ferrissia fragilis\",     \"Ferrissia fragilis\",     \"Rana blanfordii Boulenger\",     \"Python reticulatus Fitzinger, 1826\",     \"Stenelmis williami Schmude\",     \"Veronica austriaca Jacq.\"   ),   datasetKey = c(     \"e4746398-f7c4-47a1-a474-ae80a4f18e92\",     \"9ff7d317-609b-4c08-bd86-3bc404b77c42\",     \"e4746398-f7c4-47a1-a474-ae80a4f18e92\",     \"9ff7d317-609b-4c08-bd86-3bc404b77c42\",     \"9ff7d317-609b-4c08-bd86-3bc404b77c42\",     \"289244ee-e1c1-49aa-b2d7-d379391ce265\",     \"3f5e930b-52a5-461d-87ec-26ecd66f14a3\",     \"3772da2f-daa1-4f07-a438-15a881a2142c\",     \"7ddf754f-d193-4cc9-b351-99906754a03b\",     \"9ca92552-f23a-41a8-a140-01abaa31c931\",     \"9ff7d317-609b-4c08-bd86-3bc404b77c42\"   ),   bb_key = c(     2427092,     2651108,     6723,     NA,     NA,     2291152,     2291152,     2430304,     7587934,     1033588,     NA   ),   bb_scientificName = c(     \"Rana catesbeiana Shaw, 1802\",     \"Polystichum tsus-tsus-tsus (Hook.) Captain\",     \"Lemnaceae\",     NA,     NA,     \"Ferrissia fragilis (Tryon, 1863)\",     \"Ferrissia fragilis (Tryon, 1863)\",     \"Rana blanfordii Boulenger, 1882\",     \"Python reticulatus Fitzinger, 1826\",     \"Stenelmis williami Schmude\",     NA   ),   bb_kingdom = c(     \"Animalia\",     \"Plantae\",     \"Plantae\",     NA,     NA,     \"Animalia\",     \"Animalia\",     \"Animalia\",     \"Animalia\",     \"Animalia\",     NA   ),   bb_rank = c(     \"SPECIES\",     \"SPECIES\",     \"FAMILY\",     NA,     NA,     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     NA   ),   bb_taxonomicStatus = c(     \"SYNONYM\",     \"SYNONYM\",     \"SYNONYM\",     NA,     NA,     \"SYNONYM\",     \"SYNONYM\",     \"SYNONYM\",     \"SYNONYM\",     \"SYNONYM\",     NA   ),   bb_acceptedKey = c(     2427091,     4046493,     6979,     NA,     NA,     9520065,     9520065,     2427008,     9260388,     1033553,     NA   ),   bb_acceptedName = c(     \"Lithobates dummyus (Batman, 2018)\",     \"Polystichum luctuosum (Kunze) Moore.\",     \"Araceae\",     NA,     NA,     \"Ferrissia californica (Rowell, 1863)\",     \"Ferrissia californica (Rowell, 1863)\",     \"Hylarana chalconota (Schlegel, 1837)\",     \"Malayopython reticulatus (Schneider, 1801)\",     \"Stenelmis Dufour, 1835\",     NA   ),   bb_acceptedKingdom = c(     \"Animalia\",     \"Plantae\",     \"Plantae\",     NA,     NA,     \"Animalia\",     \"Animalia\",     \"Animalia\",     \"Animalia\",     \"Animalia\",     NA   ),   bb_acceptedRank = c(     \"SPECIES\",     \"SPECIES\",     \"FAMILY\",     NA,     NA,     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     \"SPECIES\",     \"GENUS\",     NA   ),   bb_acceptedTaxonomicStatus = c(     \"ACCEPTED\",     \"ACCEPTED\",     \"ACCEPTED\",     NA,     NA,     \"ACCEPTED\",     \"ACCEPTED\",     \"ACCEPTED\",     \"ACCEPTED\",     \"ACCEPTED\",     NA   ),   verificationKey = c(     2427091,     4046493,     6979,     \"2805420,2805363\",     NA,     NA,     NA,     NA,     9260388,     NA,     3172099   ),   remarks = c(     \"dummy example 1: bb_acceptedName should be updated.\",     \"dummy example 2: bb_scientificName should be updated.\",     \"dummy example 3: not used anymore. Set outdated = TRUE.\",     \"dummy example 4: multiple keys in verificationKey are allowed.\",     \"dummy example 5: nothing should happen.\",     \"dummy example 6: datasetKey should not be modified. If new taxa come in     with same name from other checklsits, they should be added as new rows.     Report them as duplicates in duplicates_taxa\",     \"dummy example 7: datasetKey should not be modified. If new taxa come in     with same name from other checklsits, they should be added as new rows.     Report them as duplicates in duplicates_taxa\",     \"dummy example 8: outdated synonym. Set outdated = TRUE.\",     \"dummy example 9: outdated synonym. outdated is already TRUE. No actions.\",     \"dummy example 10: outdated synonym. Not outdated anymore. Change outdated     back to FALSE.\",     \"dummy example 11: outdated unmatched taxa. Set outdated = TRUE.\"   ),   verifiedBy = c(     \"Damiano Oldoni\",     \"Peter Desmet\",     \"Stijn Van Hoey\",     \"Tanja Milotic\",     NA,     NA,     NA,     NA,     \"Lien Reyserhove\",     NA,     \"Dimitri Brosens\"   ),   dateAdded = as.Date(     c(       \"2018-07-01\",       \"2018-07-01\",       \"2018-07-01\",       \"2018-07-16\",       \"2018-07-16\",       \"2018-07-01\",       \"2018-11-20\",       \"2018-11-29\",       \"2018-12-01\",       \"2018-12-02\",       \"2018-12-03\"     )   ),   outdated = c(     FALSE,     FALSE,     FALSE,     FALSE,     FALSE,     FALSE,     FALSE,     FALSE,     TRUE,     TRUE,     FALSE   ),   stringsAsFactors = FALSE )  # output verify_taxa(taxa = my_taxa, verification = my_verification) verify_taxa(taxa = my_taxa)  # you can also provide your own column names for one or more required columns: library(dplyr) my_taxa_other_colnames <-   rename(     my_taxa,     checklist = datasetKey,     scientific_names = scientificName   )  my_verification_other_colnames <-   rename(     my_verification,     backbone_scientific_names = bb_scientificName,     backbone_accepted_names = bb_acceptedName,     is_outdated = outdated,     author_verification = verifiedBy   )  # output verify_taxa(   taxa = my_taxa_other_colnames,   verification = my_verification_other_colnames ) } # }"},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level1.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot number of introduced taxa for CBD pathways level 1 ‚Äî visualize_pathways_level1","title":"Plot number of introduced taxa for CBD pathways level 1 ‚Äî visualize_pathways_level1","text":"Function plot bar graph number taxa introduced different pathways level 1. Possible breakpoints: taxonomic (kingdoms + vertebrates/invertebrates) temporal (lower limit year). Facets can added (see argument facet_column).","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot number of introduced taxa for CBD pathways level 1 ‚Äî visualize_pathways_level1","text":"","code":"visualize_pathways_level1(   df,   category = NULL,   from = NULL,   facet_column = NULL,   pathways = NULL,   pathway_level1_names = \"pathway_level1\",   taxon_names = \"key\",   kingdom_names = \"kingdom\",   phylum_names = \"phylum\",   first_observed = \"first_observed\",   cbd_standard = TRUE,   title = NULL,   x_lab = \"Number of introduced taxa\",   y_lab = \"Pathways\" )"},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot number of introduced taxa for CBD pathways level 1 ‚Äî visualize_pathways_level1","text":"df data frame. category NULL character. One kingdoms given GBIF Chordata (phylum), Chordata (phyla Animalia): 1. Plantae 2. Animalia 3. Fungi 4. Chromista 5. Archaea 6. Bacteria 7. Protozoa 8. Viruses 9. incertae sedis 10. Chordata 11. Chordata Default: NULL. NULL numeric. Year trade-: select pathways related taxa introduced year. Default: NULL. facet_column NULL (default) character. column use create additional facet wrap bar graphs underneath main graph. NULL, facet graph created. One family, order, class, phylum, locality, native_range, habitat. column another name, rename calling function. Facet phylum allowed combination category equal \"Chordata\" \"Chordata\". Facet kingdom allowed category equal NULL. pathways character. Vector pathways level 1 visualize. pathways displayed following order vector. pathway_level1_names character. Name column df containing information pathways level 1. Default: pathway_level1. taxon_names character. Name column df containing information taxa. parameter used uniquely identify taxa. kingdom_names character. Name column df containing information kingdom. Default: \"kingdom\". phylum_names character. Name column df containing information phylum. parameter used category one : \"Chordata\", \"Chordata\".  Default: \"phylum\". first_observed character. Name column df containing information year introduction. Default: \"first_observed\". cbd_standard logical. TRUE values pathway level 1 checked based CBD standard returned pathways_cbd(). Error returned unmatched values found. FALSE, warning returned. Default: TRUE. title NULL character. Title graph. Default: NULL. x_lab NULL character. x-axis label. Default: \"Number introduced taxa\". y_lab NULL character. Title graph. Default: \"Pathways\".","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot number of introduced taxa for CBD pathways level 1 ‚Äî visualize_pathways_level1","text":"list three slots: plot: ggplot2 object (egg object facets used). NULL data plot. data_top_graph: data.frame (tibble) data used main plot (top graph) plot. data_facet_graph: data.frame (tibble) data used faceting plot plot. NULL returned facet_column NULL.","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot number of introduced taxa for CBD pathways level 1 ‚Äî visualize_pathways_level1","text":"","code":"if (FALSE) { # \\dontrun{ library(readr) datafile <- paste0(   \"https://raw.githubusercontent.com/trias-project/indicators/master/data/\",   \"interim/data_input_checklist_indicators.tsv\" ) data <- read_tsv(datafile,   na = \"NA\",   col_types = cols(     .default = col_character(),     key = col_double(),     nubKey = col_double(),     speciesKey = col_double(),     acceptedKey = col_double(),     first_observed = col_double(),     last_observed = col_double()   ) ) # All taxa visualize_pathways_level1(data)  # Animalia visualize_pathways_level1(data, category = \"Animalia\")  # Chordata visualize_pathways_level1(data, category = \"Chordata\")  # facet phylum visualize_pathways_level1(   data,   category = \"Animalia\",   facet_column = \"phylum\" )  # facet habitat visualize_pathways_level1(data, facet_column = \"habitat\")  # Only taxa introduced from 1950 visualize_pathways_level1(data, from = 1950)  # Only taxa with pathways \"corridor\" and \"escape\" visualize_pathways_level1(data, pathways = c(\"corridor\", \"escape\"))  # Add a title visualize_pathways_level1(   data,   category = \"Plantae\",   from = 1950,   title = \"Plantae - Pathway level 1 from 1950\" )  # Personalize axis labels visualize_pathways_level1(data, x_lab = \"Aantal taxa\", y_lab = \"pathways\") } # }"},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level2.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot number of introduced taxa for CBD pathways level 2 ‚Äî visualize_pathways_level2","title":"Plot number of introduced taxa for CBD pathways level 2 ‚Äî visualize_pathways_level2","text":"Function plot bar graph number taxa introduced different pathways level 2, given pathway level 1. Possible breakpoints: taxonomic (kingdoms + vertebrates/invertebrates) temporal (lower limit year).","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot number of introduced taxa for CBD pathways level 2 ‚Äî visualize_pathways_level2","text":"","code":"visualize_pathways_level2(   df,   chosen_pathway_level1,   category = NULL,   from = NULL,   facet_column = NULL,   pathways = NULL,   pathway_level1_names = \"pathway_level1\",   pathway_level2_names = \"pathway_level2\",   taxon_names = \"key\",   kingdom_names = \"kingdom\",   phylum_names = \"phylum\",   first_observed = \"first_observed\",   cbd_standard = TRUE,   title = NULL,   x_lab = \"Number of introduced taxa\",   y_lab = \"Pathways\" )"},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot number of introduced taxa for CBD pathways level 2 ‚Äî visualize_pathways_level2","text":"df df. chosen_pathway_level1 character. pathway level 1. CBD standard followed (see argument cbd_standard), one level 1 pathways pathways_cbd(). category NULL (default) character. One kingdoms given GBIF Chordata (phylum) Chordata (phyla Animalia): Plantae Animalia Fungi Chromista Archaea Bacteria Protozoa Viruses incertae sedis Chordata Chordata NULL numeric. Year trade-: NULL select pathways related taxa introduced year. Default: NULL. facet_column NULL (default) character. column use create additional facet wrap bar graphs underneath main graph. NULL, facet graph created. One family, order, class, phylum, locality, native_range, habitat. column another name, rename calling function. Facet phylum allowed combination category equal \"Chordata\" \"Chordata\". Facet kingdom allowed category equal NULL. pathways character. Vector pathways level 2 visualize. pathways displayed following order vector. pathway_level1_names character. Name column df containing information pathways level 1. Default: pathway_level1. pathway_level2_names character. Name column df containing information pathways level 2. Default: pathway_level2. taxon_names character. Name column df containing information taxa. parameter used uniquely identify taxa. kingdom_names character. Name column df containing information kingdom. Default: \"kingdom\". phylum_names character. Name column df containing information phylum. parameter used category one : \"Chordata\", \"Chordata\".  Default: \"phylum\". first_observed character. Name column df containing information year introduction. Default: \"first_observed\". cbd_standard logical. TRUE values pathway level 2 checked based CBD standard returned pathways_cbd(). Error returned unmatched values found. FALSE, warning returned. Default: TRUE. title NULL character. Title graph. Default: NULL. x_lab NULL character. x-axis label. Default: \"Number introduced taxa\". y_lab NULL character. Title graph. Default: \"Pathways\".","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot number of introduced taxa for CBD pathways level 2 ‚Äî visualize_pathways_level2","text":"list three slots: plot: ggplot2 object (egg object facets used). NULL data plot. data_top_graph: data.frame (tibble) data used main plot (top graph) plot. data_facet_graph: data.frame (tibble) data used faceting plot plot. NULL returned facet_column NULL.","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_level2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot number of introduced taxa for CBD pathways level 2 ‚Äî visualize_pathways_level2","text":"","code":"if (FALSE) { # \\dontrun{ library(readr) datafile <- paste0(   \"https://raw.githubusercontent.com/trias-project/indicators/master/data/\",   \"interim/data_input_checklist_indicators.tsv\" ) data <- read_tsv(datafile,   na = \"\",   col_types = cols(     .default = col_character(),     key = col_double(),     nubKey = col_double(),     speciesKey = col_double(),     first_observed = col_double(),     last_observed = col_double()   ) ) # All taxa visualize_pathways_level2(data, chosen_pathway_level1 = \"escape\")  # Animalia visualize_pathways_level2(data,   chosen_pathway_level1 = \"escape\",   category = \"Animalia\" )  # Chordata visualize_pathways_level2(   df = data,   chosen_pathway_level1 = \"escape\",   category = \"Chordata\" )  # select some pathways only visualize_pathways_level2(   df = data,    chosen_pathway_level1 = \"escape\",   pathways = c(\"pet\", \"horticulture\") )  # facet phylum visualize_pathways_level2(   df = data,   chosen_pathway_level1 = \"escape\",   category = \"Animalia\",   facet_column = \"phylum\" )  # facet habitat visualize_pathways_level2(   df = data,   chosen_pathway_level1 = \"escape\",   facet_column = \"habitat\" )  # Only taxa introduced from 1950 visualize_pathways_level2(   df = data,   chosen_pathway_level1 = \"escape\",   from = 1950 )  # Add a title visualize_pathways_level2(   df = data,   chosen_pathway_level1 = \"escape\",   category = \"Plantae\",   from = 1950,   title = \"Pathway level 2 (escape): Plantae, from 1950\" )  # Personalize axis labels visualize_pathways_level2(   df = data,   chosen_pathway_level1 = \"escape\",   x_lab = \"Aantal taxa\",   y_lab = \"pathways\" ) } # }"},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level1.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot number of introduced taxa over time for pathways level 1 ‚Äî visualize_pathways_year_level1","title":"Plot number of introduced taxa over time for pathways level 1 ‚Äî visualize_pathways_year_level1","text":"Function plot line graph number taxa introduced time different CBD pathways level 1. Time expressed years. Possible breakpoints: taxonomic (kingdoms + vertebrates/invertebrates).","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot number of introduced taxa over time for pathways level 1 ‚Äî visualize_pathways_year_level1","text":"","code":"visualize_pathways_year_level1(   df,   bin = 10,   from = 1950,   category = NULL,   facet_column = NULL,   pathways = NULL,   pathway_level1_names = \"pathway_level1\",   taxon_names = \"key\",   kingdom_names = \"kingdom\",   phylum_names = \"phylum\",   first_observed = \"first_observed\",   cbd_standard = TRUE,   title = NULL,   x_lab = \"Time period\",   y_lab = \"Number of introduced taxa\" )"},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot number of introduced taxa over time for pathways level 1 ‚Äî visualize_pathways_year_level1","text":"df data frame. bin numeric. Time span years use agggregation. Default: 10. numeric. Year trade-: taxa introduced year grouped together. Default: 1950. category NULL (default) character. One kingdoms given GBIF Chordata (phylum) Chordata (phyla Animalia): Plantae Animalia Fungi Chromista Archaea Bacteria Protozoa Viruses incertae sedis Chordata Chordata facet_column NULL (default) character. column use create additional facet wrap bar graphs underneath main graph. NULL, facet graph created. One family, order, class, phylum, kingdom, locality, native_range, habitat. column another name, rename calling function. Facet phylum allowed combination category equal \"Chordata\" \"Chordata\". Facet kingdom allowed category equal NULL. pathways character. Vector pathways level 1 visualize. pathways displayed following order vector. pathway_level1_names character. Name column df containing information pathways level 1. Default: pathway_level1. taxon_names character. Name column df containing information taxa. parameter used uniquely identify taxa. kingdom_names character. Name column df containing information kingdom. Default: \"kingdom\". phylum_names character. Name column df containing information phylum. parameter used category one :  \"Chordata\", \"Chordata\".  Default: \"phylum\". first_observed character. Name column df containing information year introduction. Default: \"first_observed\". cbd_standard logical. TRUE values pathway level 1 checked based CBD standard returned pathways_cbd(). Error returned unmatched values found. FALSE, warning returned. Default: TRUE. title NULL character. Title graph. Default: NULL. x_lab NULL character. x-axis label. Default: \"Number introduced taxa\". y_lab NULL character. Title graph. Default: \"Pathways\".","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot number of introduced taxa over time for pathways level 1 ‚Äî visualize_pathways_year_level1","text":"list three slots: plot: ggplot2 object (egg object facets used). NULL data plot. data_top_graph: data.frame (tibble) data used main plot (top graph) plot. data_facet_graph: data.frame (tibble) data used faceting plot plot. NULL returned facet_column NULL.","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot number of introduced taxa over time for pathways level 1 ‚Äî visualize_pathways_year_level1","text":"","code":"if (FALSE) { # \\dontrun{ library(readr) datafile <- paste0(   \"https://raw.githubusercontent.com/trias-project/indicators/master/data/\",   \"interim/data_input_checklist_indicators.tsv\" ) data <- read_tsv(datafile,   na = \"\",   col_types = cols(     .default = col_character(),     key = col_double(),     nubKey = col_double(),     speciesKey = col_double(),     first_observed = col_double(),     last_observed = col_double()   ) ) # All taxa visualize_pathways_year_level1(data)  # Animalia visualize_pathways_year_level1(data, category = \"Animalia\")  # Chordata visualize_pathways_year_level1(data, category = \"Chordata\")  # Group by 20 years visualize_pathways_year_level1(data, bin = 20)  # Group taxa introudced before 1970 alltogether visualize_pathways_year_level1(data, from = 1970)  # facet locality visualize_pathways_year_level1(   data,   category = \"Not Chordata\",   facet_column = \"locality\" )  # facet habitat visualize_pathways_year_level1(data, facet_column = \"habitat\")  # Only taxa with pathways \"corridor\" and \"escape\" visualize_pathways_year_level1(data, pathways = c(\"corridor\", \"escape\"))  # Add a title visualize_pathways_year_level1(   data,   category = \"Plantae\",   from = 1950,   title = \"Pathway level 1: Plantae\" )  # Personalize axis labels visualize_pathways_year_level1(   data,   x_lab = \"Jaar\",   y_lab = \"Aantal ge√É¬Øntroduceerde taxa\" ) } # }"},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level2.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot number of introduced taxa over time for pathways level 2 ‚Äî visualize_pathways_year_level2","title":"Plot number of introduced taxa over time for pathways level 2 ‚Äî visualize_pathways_year_level2","text":"Function plot line graph number taxa introduced time different CBD pathways level 2 specific CBD pathway level 1. Time expressed years. Possible breakpoints: taxonomic (kingdoms + vertebrates/invertebrates).","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot number of introduced taxa over time for pathways level 2 ‚Äî visualize_pathways_year_level2","text":"","code":"visualize_pathways_year_level2(   df,   chosen_pathway_level1,   bin = 10,   from = 1950,   category = NULL,   facet_column = NULL,   pathways = NULL,   pathway_level1_names = \"pathway_level1\",   pathway_level2_names = \"pathway_level2\",   taxon_names = \"key\",   kingdom_names = \"kingdom\",   phylum_names = \"phylum\",   first_observed = \"first_observed\",   cbd_standard = TRUE,   title = NULL,   x_lab = \"Time period\",   y_lab = \"Number of introduced taxa\" )"},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot number of introduced taxa over time for pathways level 2 ‚Äî visualize_pathways_year_level2","text":"df data frame. chosen_pathway_level1 character. Selected pathway level 1. bin numeric. Time span years use agggregation. Default: 10. numeric. Year trade-: taxa introduced year grouped together. Default: 1950. category NULL (default) character. One kingdoms given GBIF Chordata (phylum) Chordata (phyla Animalia): Plantae Animalia Fungi Chromista Archaea Bacteria Protozoa Viruses incertae sedis Chordata Chordata facet_column NULL (default) character. column use create additional facet wrap bar graphs underneath main graph. NULL, facet graph created. One family, order, class, phylum, kingdom, locality, native_range, habitat. column another name, rename calling function. Facet phylum allowed combination category equal \"Chordata\" \"Chordata\". Facet kingdom allowed category equal NULL. pathways character. Vector pathways level 1 visualize. pathways displayed following order vector. pathway_level1_names character. Name column df containing information pathways level 1. Default: \"pathway_level1\". pathway_level2_names character. Name column df containing information pathways level 2. Default: \"pathway_level2\". taxon_names character. Name column df containing information taxa. parameter used uniquely identify taxa. kingdom_names character. Name column df containing information kingdom. Default: \"kingdom\". phylum_names character. Name column df containing information phylum. parameter used category one : \"Chordata\", \"Chordata\".  Default: \"phylum\". first_observed character. Name column df containing information year introduction. Default: \"first_observed\". cbd_standard logical. TRUE values pathway level 1 checked based CBD standard returned pathways_cbd(). Error returned unmatched values found. FALSE, warning returned. Default: TRUE. title NULL character. Title graph. Default: NULL. x_lab NULL character. x-axis label. Default: \"Number introduced taxa\". y_lab NULL character. Title graph. Default: \"Pathways\".","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot number of introduced taxa over time for pathways level 2 ‚Äî visualize_pathways_year_level2","text":"list three slots: plot: ggplot2 object (egg object facets used). NULL data plot. data_top_graph: data.frame (tibble) data used main plot (top graph) plot. data_facet_graph: data.frame (tibble) data used faceting plot plot. NULL returned facet_column NULL.","code":""},{"path":"https://trias-project.github.io/trias/reference/visualize_pathways_year_level2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot number of introduced taxa over time for pathways level 2 ‚Äî visualize_pathways_year_level2","text":"","code":"if (FALSE) { # \\dontrun{ library(readr) datafile <- paste0(   \"https://raw.githubusercontent.com/trias-project/indicators/master/data/\",   \"interim/data_input_checklist_indicators.tsv\" ) data <- read_tsv(datafile,   na = \"\",   col_types = cols(     .default = col_character(),     key = col_double(),     nubKey = col_double(),     speciesKey = col_double(),     first_observed = col_double(),     last_observed = col_double()   ) ) # All taxa visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\" )  # Animalia visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\",   category = \"Animalia\" )  # Chordata visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\",   category = \"Chordata\" )  # Group by 20 years visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\",   bin = 20 )  # Group taxa introudced before 1970 alltogether visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\",   from = 1970 )  # facet locality visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\",   category = \"Not Chordata\",   facet_column = \"locality\" )  # facet habitat visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\",   facet_column = \"habitat\" )  # Only taxa with pathways \"horticulture\" and \"pet\" visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\",   pathways = c(\"horticulture\", \"pet\") )  # Add a title visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\",   category = \"Plantae\",   from = 1950,   title = \"Plantae - Pathway level 1\" )  # Personalize axis labels visualize_pathways_year_level2(   data,   chosen_pathway_level1 = \"escape\",   x_lab = \"Jaar\",   y_lab = \"Aantal geintroduceerde taxa\" ) } # }"},{"path":"https://trias-project.github.io/trias/news/index.html","id":"trias-301","dir":"Changelog","previous_headings":"","what":"trias 3.0.1","title":"trias 3.0.1","text":"Function get_cred() exported anymore (#146). Internally used .","code":""},{"path":"https://trias-project.github.io/trias/news/index.html","id":"trias-300","dir":"Changelog","previous_headings":"","what":"trias 3.0.0","title":"trias 3.0.0","text":"Allow specify x-scale stepsize indicator_native_range_year() (#143) Allow specify response_type indicator_native_range_year() display ‚Äúabsolute‚Äù, ‚Äúrelative‚Äù ‚Äúcumulative‚Äù values (inbo/alien-species-portal#119). Deprecate relative argument indicator_native_range_year() favor response_type argument. Fix duplicate filtering indicator_native_range_year() (#145) x-axis breaks indicator_native_range_year() indicator_introduction_year() prettified using help function, nice_seq().","code":""}]
